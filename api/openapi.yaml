openapi: 3.0.3
info:
  description: |-
    Access Forem articles, users and other resources via API.
            For a real-world example of Forem in action, check out [DEV](https://www.dev.to).
            All endpoints can be accessed with the 'api-key' header and a accept header, but
            some of them are accessible publicly without authentication.

            Dates and date times, unless otherwise specified, must be in
            the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
  title: Forem API V1
  version: 1.0.0
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
  x-konfig-has-globally-required-security: true
servers:
- description: Production server
  url: https://dev.to/api
security:
- api-key: []
tags:
- name: users
- name: articles
- name: organizations
- name: segments
- name: billboards
- name: pages
- name: comments
- name: tags
- name: reactions
- name: followed_tags
- name: followers
- name: podcast_episodes
- name: profile images
- name: readinglist
- name: videos
paths:
  /api/articles:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of articles.

        "Articles" are all the posts that users create on DEV that typically
        show up in the feed. They can be a blog post, a discussion question,
        a help thread etc. but is referred to as article within the code.

        By default it will return featured, published articles ordered
        by descending popularity.

        It supports pagination, each page will contain `30` articles by default.
      operationId: Articles_listPublishedArticles
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      - description: |-
          Using this parameter will retrieve articles that contain the requested tag. Articles
          will be ordered by descending popularity.This parameter can be used in conjuction with `top`.
        example: discuss
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: discuss
      - description: |-
          Using this parameter will retrieve articles with any of the comma-separated tags.
          Articles will be ordered by descending popularity.
        example: "javascript, css"
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "javascript, css"
      - description: |-
          Using this parameter will retrieve articles that do _not_ contain _any_
          of comma-separated tags. Articles will be ordered by descending popularity.
        example: "node, java"
        explode: true
        in: query
        name: tags_exclude
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "node, java"
      - description: |-
          Using this parameter will retrieve articles belonging
                      to a User or Organization ordered by descending publication date.
                      If `state=all` the number of items returned will be `1000` instead of the default `30`.
                      This parameter can be used in conjuction with `state`.
        example: ben
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: ben
      - description: |-
          Using this parameter will allow the client to check which articles are fresh or rising.
                      If `state=fresh` the server will return fresh articles.
                      If `state=rising` the server will return rising articles.
                      This param can be used in conjuction with `username`, only if set to `all`.
        example: fresh
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - fresh
          - rising
          - all
          type: string
        style: form
        x-konfig-original-example: fresh
      - description: |-
          Using this parameter will allow the client to return the most popular articles
          in the last `N` days.
          `top` indicates the number of days since publication of the articles returned.
          This param can be used in conjuction with `tag`.
        example: 2
        explode: true
        in: query
        name: top
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
        x-konfig-original-example: 2
      - description: |-
          Adding this will allow the client to return the list of articles
          belonging to the requested collection, ordered by ascending publication date.
        example: 99
        explode: true
        in: query
        name: collection_id
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-konfig-original-example: 99
      responses:
        "200":
          content:
            application/json:
              example:
              - tags: discuss
                title: Let Us Now Praise Famous Men4
                description: Street yr raw denim master. Twee vice selvage neutra.  Single-origin
                  coffee crucifix franzen lo-fi...
                type_of: article
                id: 5
                readable_publish_date: Dec 15
                slug: let-us-now-praise-famous-men4-1oj7
                path: /username6/let-us-now-praise-famous-men4-1oj7
                url: http://forem.test/username6/let-us-now-praise-famous-men4-1oj7
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/8-915172672c34364d29c3fce07afa413c1ac072beff54ddd79fc7e3ed633556a1.png
                social_image: http://forem.test/assets/8-915172672c34364d29c3fce07afa413c1ac072beff54ddd79fc7e3ed633556a1.png
                canonical_url: http://forem.test/username6/let-us-now-praise-famous-men4-1oj7
                created_at: 2023-12-15T00:15:28Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - discuss
                user:
                  name: Lanette "Marine" \:/ Stanton
                  username: username6
                  twitter_username: twitter6
                  github_username: github6
                  user_id: 886
                  website_url: null
                  profile_image: /uploads/user/profile_image/886/e13bee17-64f8-43d8-9cdb-ba17c28cbdb4.jpeg
                  profile_image_90: /uploads/user/profile_image/886/e13bee17-64f8-43d8-9cdb-ba17c28cbdb4.jpeg
                organization:
                  name: Spinka and Sons
                  username: org4
                  slug: org4
                  profile_image: /uploads/organization/profile_image/4/f1003659-a58c-4019-89d1-24817528626a.png
                  profile_image_90: /uploads/organization/profile_image/4/f1003659-a58c-4019-89d1-24817528626a.png
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              schema:
                $ref: '#/components/schemas/ArticlesListPublishedArticlesResponse'
              x-konfig-original-example:
              - tags: discuss
                title: Let Us Now Praise Famous Men4
                description: Street yr raw denim master. Twee vice selvage neutra.  Single-origin
                  coffee crucifix franzen lo-fi...
                type_of: article
                id: 5
                readable_publish_date: Dec 15
                slug: let-us-now-praise-famous-men4-1oj7
                path: /username6/let-us-now-praise-famous-men4-1oj7
                url: http://forem.test/username6/let-us-now-praise-famous-men4-1oj7
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/8-915172672c34364d29c3fce07afa413c1ac072beff54ddd79fc7e3ed633556a1.png
                social_image: http://forem.test/assets/8-915172672c34364d29c3fce07afa413c1ac072beff54ddd79fc7e3ed633556a1.png
                canonical_url: http://forem.test/username6/let-us-now-praise-famous-men4-1oj7
                created_at: 2023-12-15T00:15:28Z
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - discuss
                user:
                  name: Lanette "Marine" \:/ Stanton
                  username: username6
                  twitter_username: twitter6
                  github_username: github6
                  user_id: 886
                  profile_image: /uploads/user/profile_image/886/e13bee17-64f8-43d8-9cdb-ba17c28cbdb4.jpeg
                  profile_image_90: /uploads/user/profile_image/886/e13bee17-64f8-43d8-9cdb-ba17c28cbdb4.jpeg
                organization:
                  name: Spinka and Sons
                  username: org4
                  slug: org4
                  profile_image: /uploads/organization/profile_image/4/f1003659-a58c-4019-89d1-24817528626a.png
                  profile_image_90: /uploads/organization/profile_image/4/f1003659-a58c-4019-89d1-24817528626a.png
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
          description: A List of Articles
      security: []
      summary: Published articles
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles
      x-accepts: application/json
    post:
      description: |-
        This endpoint allows the client to create a new article.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.
      operationId: Articles_createNewArticle
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesCreateNewArticleResponse'
          description: An Article
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesCreateNewArticle401Response'
          description: Unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesCreateNewArticle422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Publish article
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-articles
      x-content-type: application/json
      x-accepts: application/json
  /api/articles/latest:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of articles. ordered by descending publish date.

        It supports pagination, each page will contain 30 articles by default.
      operationId: Articles_listLatestPublished
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - tags: "javascript, html, discuss"
                title: Precious Bane7
                description: Etsy green juice trust fund irony sriracha bushwick flexitarian
                  pickled. Blog kitsch...
                type_of: article
                id: 8
                readable_publish_date: Dec 15
                slug: precious-bane7-31i9
                path: /username9/precious-bane7-31i9
                url: http://forem.test/username9/precious-bane7-31i9
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/29-62fdba2773105cf85b89a795a479be680d13a73e6b5406cacaa2458d403dda8c.png
                social_image: http://forem.test/assets/29-62fdba2773105cf85b89a795a479be680d13a73e6b5406cacaa2458d403dda8c.png
                canonical_url: http://forem.test/username9/precious-bane7-31i9
                created_at: 2023-12-15T00:15:28Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Bobette "Ling" \:/ Kuvalis
                  username: username9
                  twitter_username: twitter9
                  github_username: github9
                  user_id: 889
                  website_url: null
                  profile_image: /uploads/user/profile_image/889/114ac38d-7b97-41d5-9668-c44b27fa8fa1.jpeg
                  profile_image_90: /uploads/user/profile_image/889/114ac38d-7b97-41d5-9668-c44b27fa8fa1.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              - tags: "javascript, html, discuss"
                title: Cover Her Face6
                description: Park aesthetic tattooed godard post-ironic wolf beard
                  cold-pressed. Tumblr authentic roof readymade...
                type_of: article
                id: 7
                readable_publish_date: Dec 15
                slug: cover-her-face6-12p3
                path: /username8/cover-her-face6-12p3
                url: http://forem.test/username8/cover-her-face6-12p3
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/25-b4bb206b62bee552880440f638594e41dcd649ed9bd821af2e8dfc671d1d6813.png
                social_image: http://forem.test/assets/25-b4bb206b62bee552880440f638594e41dcd649ed9bd821af2e8dfc671d1d6813.png
                canonical_url: http://forem.test/username8/cover-her-face6-12p3
                created_at: 2023-12-15T00:15:28Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Karen "Nakia" \:/ Lockman
                  username: username8
                  twitter_username: twitter8
                  github_username: github8
                  user_id: 888
                  website_url: null
                  profile_image: /uploads/user/profile_image/888/bb690b36-2309-455f-81f4-98b4ec247427.jpeg
                  profile_image_90: /uploads/user/profile_image/888/bb690b36-2309-455f-81f4-98b4ec247427.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              - tags: "javascript, html, discuss"
                title: I Know Why the Caged Bird Sings5
                description: Carry meh farm-to-table. Fanny pack before they sold
                  out normcore fingerstache disrupt church-key...
                type_of: article
                id: 6
                readable_publish_date: Dec 15
                slug: i-know-why-the-caged-bird-sings5-393f
                path: /username7/i-know-why-the-caged-bird-sings5-393f
                url: http://forem.test/username7/i-know-why-the-caged-bird-sings5-393f
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/7-7dc75c1a59875db65e2539f321090f6cb232c3dbffdbe4367b0d32b8f2797758.png
                social_image: http://forem.test/assets/7-7dc75c1a59875db65e2539f321090f6cb232c3dbffdbe4367b0d32b8f2797758.png
                canonical_url: http://forem.test/username7/i-know-why-the-caged-bird-sings5-393f
                created_at: 2023-12-15T00:15:28Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Darby "Damian" \:/ Quitzon
                  username: username7
                  twitter_username: twitter7
                  github_username: github7
                  user_id: 887
                  website_url: null
                  profile_image: /uploads/user/profile_image/887/9e09ae0d-d45e-46e6-bcab-3b65ffef6c4d.jpeg
                  profile_image_90: /uploads/user/profile_image/887/9e09ae0d-d45e-46e6-bcab-3b65ffef6c4d.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              schema:
                $ref: '#/components/schemas/ArticlesListLatestPublishedResponse'
              x-konfig-original-example:
              - tags: "javascript, html, discuss"
                title: Precious Bane7
                description: Etsy green juice trust fund irony sriracha bushwick flexitarian
                  pickled. Blog kitsch...
                type_of: article
                id: 8
                readable_publish_date: Dec 15
                slug: precious-bane7-31i9
                path: /username9/precious-bane7-31i9
                url: http://forem.test/username9/precious-bane7-31i9
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/29-62fdba2773105cf85b89a795a479be680d13a73e6b5406cacaa2458d403dda8c.png
                social_image: http://forem.test/assets/29-62fdba2773105cf85b89a795a479be680d13a73e6b5406cacaa2458d403dda8c.png
                canonical_url: http://forem.test/username9/precious-bane7-31i9
                created_at: 2023-12-15T00:15:28Z
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Bobette "Ling" \:/ Kuvalis
                  username: username9
                  twitter_username: twitter9
                  github_username: github9
                  user_id: 889
                  profile_image: /uploads/user/profile_image/889/114ac38d-7b97-41d5-9668-c44b27fa8fa1.jpeg
                  profile_image_90: /uploads/user/profile_image/889/114ac38d-7b97-41d5-9668-c44b27fa8fa1.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              - tags: "javascript, html, discuss"
                title: Cover Her Face6
                description: Park aesthetic tattooed godard post-ironic wolf beard
                  cold-pressed. Tumblr authentic roof readymade...
                type_of: article
                id: 7
                readable_publish_date: Dec 15
                slug: cover-her-face6-12p3
                path: /username8/cover-her-face6-12p3
                url: http://forem.test/username8/cover-her-face6-12p3
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/25-b4bb206b62bee552880440f638594e41dcd649ed9bd821af2e8dfc671d1d6813.png
                social_image: http://forem.test/assets/25-b4bb206b62bee552880440f638594e41dcd649ed9bd821af2e8dfc671d1d6813.png
                canonical_url: http://forem.test/username8/cover-her-face6-12p3
                created_at: 2023-12-15T00:15:28Z
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Karen "Nakia" \:/ Lockman
                  username: username8
                  twitter_username: twitter8
                  github_username: github8
                  user_id: 888
                  profile_image: /uploads/user/profile_image/888/bb690b36-2309-455f-81f4-98b4ec247427.jpeg
                  profile_image_90: /uploads/user/profile_image/888/bb690b36-2309-455f-81f4-98b4ec247427.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              - tags: "javascript, html, discuss"
                title: I Know Why the Caged Bird Sings5
                description: Carry meh farm-to-table. Fanny pack before they sold
                  out normcore fingerstache disrupt church-key...
                type_of: article
                id: 6
                readable_publish_date: Dec 15
                slug: i-know-why-the-caged-bird-sings5-393f
                path: /username7/i-know-why-the-caged-bird-sings5-393f
                url: http://forem.test/username7/i-know-why-the-caged-bird-sings5-393f
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/7-7dc75c1a59875db65e2539f321090f6cb232c3dbffdbe4367b0d32b8f2797758.png
                social_image: http://forem.test/assets/7-7dc75c1a59875db65e2539f321090f6cb232c3dbffdbe4367b0d32b8f2797758.png
                canonical_url: http://forem.test/username7/i-know-why-the-caged-bird-sings5-393f
                created_at: 2023-12-15T00:15:28Z
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Darby "Damian" \:/ Quitzon
                  username: username7
                  twitter_username: twitter7
                  github_username: github7
                  user_id: 887
                  profile_image: /uploads/user/profile_image/887/9e09ae0d-d45e-46e6-bcab-3b65ffef6c4d.jpeg
                  profile_image_90: /uploads/user/profile_image/887/9e09ae0d-d45e-46e6-bcab-3b65ffef6c4d.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
          description: A List of Articles
      security: []
      summary: Published articles sorted by published date
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-latest
      x-accepts: application/json
  /api/articles/{id}:
    get:
      description: This endpoint allows the client to retrieve a single published
        article given its `id`.
      operationId: Articles_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                tags:
                - discuss
                title: It's a Battlefield8
                description: Venmo slow-carb vhs ugh cronut crucifix. Freegan hella
                  hammock helvetica you probably haven't heard...
                type_of: article
                id: 9
                readable_publish_date: Dec 15
                slug: its-a-battlefield8-2af
                path: /username10/its-a-battlefield8-2af
                url: http://forem.test/username10/its-a-battlefield8-2af
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                social_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                canonical_url: http://forem.test/username10/its-a-battlefield8-2af
                created_at: 2023-12-15T00:15:28Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list: discuss
                body_html: |+
                  <p>Venmo slow-carb vhs ugh cronut crucifix. Freegan hella hammock helvetica you probably haven't heard of them try-hard. Humblebrag iphone fashion axe small batch flexitarian fixie.</p>

                  <p>Neutra cliche occupy trust fund actually. Heirloom vinyl vice freegan. Pbr&amp;b whatever organic dreamcatcher kickstarter pork belly authentic.</p>

                body_markdown: "---\ntitle: It's a Battlefield8\npublished: true\n\
                  tags: discuss\ndate: \nseries: \ncanonical_url: \n\n---\n\nVenmo\
                  \ slow-carb vhs ugh cronut crucifix. Freegan hella hammock helvetica\
                  \ you probably haven't heard of them try-hard. Humblebrag iphone\
                  \ fashion axe small batch flexitarian fixie.\n\n\nNeutra cliche\
                  \ occupy trust fund actually. Heirloom vinyl vice freegan. Pbr&b\
                  \ whatever organic dreamcatcher kickstarter pork belly authentic.\n\
                  \n"
                user:
                  name: Raylene "Romana" \:/ Bailey
                  username: username10
                  twitter_username: twitter10
                  github_username: github10
                  user_id: 890
                  website_url: null
                  profile_image: /uploads/user/profile_image/890/f6fe914d-9deb-461c-bb67-2f8af4957a89.jpeg
                  profile_image_90: /uploads/user/profile_image/890/f6fe914d-9deb-461c-bb67-2f8af4957a89.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              schema:
                $ref: '#/components/schemas/ArticlesGetByIdResponse'
              x-konfig-original-example:
                tags:
                - discuss
                title: It's a Battlefield8
                description: Venmo slow-carb vhs ugh cronut crucifix. Freegan hella
                  hammock helvetica you probably haven't heard...
                type_of: article
                id: 9
                readable_publish_date: Dec 15
                slug: its-a-battlefield8-2af
                path: /username10/its-a-battlefield8-2af
                url: http://forem.test/username10/its-a-battlefield8-2af
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:28Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                social_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                canonical_url: http://forem.test/username10/its-a-battlefield8-2af
                created_at: 2023-12-15T00:15:28Z
                published_at: 2023-12-15T00:15:28Z
                last_comment_at: 2023-12-15T00:15:28Z
                reading_time_minutes: 1
                tag_list: discuss
                body_html: |+
                  <p>Venmo slow-carb vhs ugh cronut crucifix. Freegan hella hammock helvetica you probably haven't heard of them try-hard. Humblebrag iphone fashion axe small batch flexitarian fixie.</p>

                  <p>Neutra cliche occupy trust fund actually. Heirloom vinyl vice freegan. Pbr&amp;b whatever organic dreamcatcher kickstarter pork belly authentic.</p>

                body_markdown: "---\ntitle: It's a Battlefield8\npublished: true\n\
                  tags: discuss\ndate: \nseries: \ncanonical_url: \n\n---\n\nVenmo\
                  \ slow-carb vhs ugh cronut crucifix. Freegan hella hammock helvetica\
                  \ you probably haven't heard of them try-hard. Humblebrag iphone\
                  \ fashion axe small batch flexitarian fixie.\n\n\nNeutra cliche\
                  \ occupy trust fund actually. Heirloom vinyl vice freegan. Pbr&b\
                  \ whatever organic dreamcatcher kickstarter pork belly authentic.\n\
                  \n"
                user:
                  name: Raylene "Romana" \:/ Bailey
                  username: username10
                  twitter_username: twitter10
                  github_username: github10
                  user_id: 890
                  profile_image: /uploads/user/profile_image/890/f6fe914d-9deb-461c-bb67-2f8af4957a89.jpeg
                  profile_image_90: /uploads/user/profile_image/890/f6fe914d-9deb-461c-bb67-2f8af4957a89.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
          description: An Article
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetById404Response'
          description: Article Not Found
          x-do-not-generate: true
      security: []
      summary: Published article by id
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-id
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows the client to update an existing article.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.
      operationId: Articles_updateById
      parameters:
      - description: The ID of the user to unpublish.
        example: 123
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUpdateByIdResponse'
          description: An Article
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUpdateById401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUpdateById404Response'
          description: Article Not Found
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUpdateById422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Update an article by id
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-articles-id
      x-content-type: application/json
      x-accepts: application/json
  /api/articles/{username}/{slug}:
    get:
      description: This endpoint allows the client to retrieve a single published
        article given its `path`.
      operationId: Articles_getByPath
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                tags:
                - discuss
                title: Far From the Madding Crowd12
                description: 3 wolf moon asymmetrical mumblecore put a bird on it
                  tilde yolo mustache crucifix. Heirloom scenester...
                type_of: article
                id: 13
                readable_publish_date: Dec 15
                slug: far-from-the-madding-crowd12-1m5d
                path: /username15/far-from-the-madding-crowd12-1m5d
                url: http://forem.test/username15/far-from-the-madding-crowd12-1m5d
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:29Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/2-1a96ae446ded018b65b215cce3aecc40a00e701642da521fdd6edd3c593ff6c1.png
                social_image: http://forem.test/assets/2-1a96ae446ded018b65b215cce3aecc40a00e701642da521fdd6edd3c593ff6c1.png
                canonical_url: http://forem.test/username15/far-from-the-madding-crowd12-1m5d
                created_at: 2023-12-15T00:15:29Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:29Z
                last_comment_at: 2023-12-15T00:15:29Z
                reading_time_minutes: 1
                tag_list: discuss
                body_html: |+
                  <p>3 wolf moon asymmetrical mumblecore put a bird on it tilde yolo mustache crucifix. Heirloom scenester crucifix pickled skateboard. Synth 8-bit flexitarian typewriter banjo. Crucifix synth wayfarers humblebrag locavore vice brooklyn organic.</p>

                  <p>Microdosing cronut muggle magic authentic carry. Occupy kombucha synth celiac food truck you probably haven't heard of them.</p>

                body_markdown: "---\ntitle: Far From the Madding Crowd12\npublished:\
                  \ true\ntags: discuss\ndate: \nseries: \ncanonical_url: \n\n---\n\
                  \n3 wolf moon asymmetrical mumblecore put a bird on it tilde yolo\
                  \ mustache crucifix. Heirloom scenester crucifix pickled skateboard.\
                  \ Synth 8-bit flexitarian typewriter banjo. Crucifix synth wayfarers\
                  \ humblebrag locavore vice brooklyn organic.\n\n\nMicrodosing cronut\
                  \ muggle magic authentic carry. Occupy kombucha synth celiac food\
                  \ truck you probably haven't heard of them.\n\n"
                user:
                  name: Noreen "Alvaro" \:/ Schinner
                  username: username15
                  twitter_username: twitter15
                  github_username: github15
                  user_id: 895
                  website_url: null
                  profile_image: /uploads/user/profile_image/895/9e4706ef-d56d-4167-9355-1a3db85801e1.jpeg
                  profile_image_90: /uploads/user/profile_image/895/9e4706ef-d56d-4167-9355-1a3db85801e1.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
              schema:
                $ref: '#/components/schemas/ArticlesGetByPathResponse'
              x-konfig-original-example:
                tags:
                - discuss
                title: Far From the Madding Crowd12
                description: 3 wolf moon asymmetrical mumblecore put a bird on it
                  tilde yolo mustache crucifix. Heirloom scenester...
                type_of: article
                id: 13
                readable_publish_date: Dec 15
                slug: far-from-the-madding-crowd12-1m5d
                path: /username15/far-from-the-madding-crowd12-1m5d
                url: http://forem.test/username15/far-from-the-madding-crowd12-1m5d
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:29Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/2-1a96ae446ded018b65b215cce3aecc40a00e701642da521fdd6edd3c593ff6c1.png
                social_image: http://forem.test/assets/2-1a96ae446ded018b65b215cce3aecc40a00e701642da521fdd6edd3c593ff6c1.png
                canonical_url: http://forem.test/username15/far-from-the-madding-crowd12-1m5d
                created_at: 2023-12-15T00:15:29Z
                published_at: 2023-12-15T00:15:29Z
                last_comment_at: 2023-12-15T00:15:29Z
                reading_time_minutes: 1
                tag_list: discuss
                body_html: |+
                  <p>3 wolf moon asymmetrical mumblecore put a bird on it tilde yolo mustache crucifix. Heirloom scenester crucifix pickled skateboard. Synth 8-bit flexitarian typewriter banjo. Crucifix synth wayfarers humblebrag locavore vice brooklyn organic.</p>

                  <p>Microdosing cronut muggle magic authentic carry. Occupy kombucha synth celiac food truck you probably haven't heard of them.</p>

                body_markdown: "---\ntitle: Far From the Madding Crowd12\npublished:\
                  \ true\ntags: discuss\ndate: \nseries: \ncanonical_url: \n\n---\n\
                  \n3 wolf moon asymmetrical mumblecore put a bird on it tilde yolo\
                  \ mustache crucifix. Heirloom scenester crucifix pickled skateboard.\
                  \ Synth 8-bit flexitarian typewriter banjo. Crucifix synth wayfarers\
                  \ humblebrag locavore vice brooklyn organic.\n\n\nMicrodosing cronut\
                  \ muggle magic authentic carry. Occupy kombucha synth celiac food\
                  \ truck you probably haven't heard of them.\n\n"
                user:
                  name: Noreen "Alvaro" \:/ Schinner
                  username: username15
                  twitter_username: twitter15
                  github_username: github15
                  user_id: 895
                  profile_image: /uploads/user/profile_image/895/9e4706ef-d56d-4167-9355-1a3db85801e1.jpeg
                  profile_image_90: /uploads/user/profile_image/895/9e4706ef-d56d-4167-9355-1a3db85801e1.jpeg
                flare_tag:
                  name: discuss
                  bg_color_hex: '#000000'
                  text_color_hex: '#ffffff'
          description: An Article
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetByPath404Response'
          description: Article Not Found
          x-do-not-generate: true
      security: []
      summary: Published article by path
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-username-slug
      x-accepts: application/json
  /api/articles/me:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of published articles on behalf of an authenticated user.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.

        Published articles will be in reverse chronological publication order.

        It will return published articles with pagination. By default a page will contain 30 articles.
      operationId: Articles_getPublishedList
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/ArticlesGetPublishedListResponse'
              x-konfig-original-example: []
          description: A List of the authenticated user's Articles
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetPublishedList401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: User's articles
      tags:
      - articles
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-me
      x-accepts: application/json
  /api/articles/me/published:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of published articles on behalf of an authenticated user.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.

        Published articles will be in reverse chronological publication order.

        It will return published articles with pagination. By default a page will contain 30 articles.
      operationId: Articles_getPublishedList
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/ArticlesGetPublishedList200Response'
              x-konfig-original-example: []
          description: A List of the authenticated user's Articles
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetPublishedList401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: User's published articles
      tags:
      - articles
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-me-published
      x-accepts: application/json
  /api/articles/me/unpublished:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of unpublished articles on behalf of an authenticated user.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.

        Unpublished articles will be in reverse chronological creation order.

        It will return unpublished articles with pagination. By default a page will contain 30 articles.
      operationId: Articles_getUnpublishedList
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/ArticlesGetUnpublishedListResponse'
              x-konfig-original-example: []
          description: A List of the authenticated user's Articles
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetUnpublishedList401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: User's unpublished articles
      tags:
      - articles
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-me-unpublished
      x-accepts: application/json
  /api/articles/me/all:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of all articles on behalf of an authenticated user.

        "Articles" are all the posts that users create on DEV that typically show up in the feed. They can be a blog post, a discussion question, a help thread etc. but is referred to as article within the code.

        It will return both published and unpublished articles with pagination.

        Unpublished articles will be at the top of the list in reverse chronological creation order. Published articles will follow in reverse chronological publication order.

        By default a page will contain 30 articles.
      operationId: Articles_getAllUserArticles
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/ArticlesGetAllUserArticlesResponse'
              x-konfig-original-example: []
          description: A List of the authenticated user's Articles
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetAllUserArticles401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: User's all articles
      tags:
      - articles
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-articles-me-all
      x-accepts: application/json
  /api/articles/{id}/unpublish:
    put:
      description: |-
        This endpoint allows the client to unpublish an article.

        The user associated with the API key must have any 'admin' or 'moderator' role.

        The article will be unpublished and will no longer be visible to the public. It will remain
        in the database and will set back to draft status on the author's posts dashboard. Any
        notifications associated with the article will be deleted. Any comments on the article
        will remain.
      operationId: Articles_unpublishById
      parameters:
      - description: The ID of the article to unpublish.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      - description: Content for the note that's created along with unpublishing
        example: Admin requested unpublishing all articles via API
        explode: true
        in: query
        name: note
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: Admin requested unpublishing all articles via API
      responses:
        "204":
          description: Article successfully unpublished
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUnpublishByIdResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesUnpublishById404Response'
          description: Article Not Found
          x-do-not-generate: true
      summary: Unpublish an article
      tags:
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-articles-id-unpublish
      x-accepts: application/json
  /api/segments:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of audience segments.

        An audience segment is a group of users that can be targeted by a Billboard. This API only permits managing segments you create and maintain yourself.

        The endpoint supports pagination, and each page will contain `30` segments by default.
      operationId: Segments_listAudienceSegments
      parameters:
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2
                created_at: 2023-12-15T11:15:30.398+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.398+11:00
                user_count: 1
              - id: 1
                created_at: 2023-12-15T11:15:30.308+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.308+11:00
                user_count: 3
              schema:
                $ref: '#/components/schemas/SegmentsListAudienceSegmentsResponse'
              x-konfig-original-example:
              - id: 2
                created_at: 2023-12-15T11:15:30.398+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.398+11:00
                user_count: 1
              - id: 1
                created_at: 2023-12-15T11:15:30.308+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.308+11:00
                user_count: 3
          description: A List of manually managed audience segments
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsListAudienceSegments401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: Manually managed audience segments
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-segments
      x-accepts: application/json
    post:
      description: |-
        This endpoint allows the client to create a new audience segment.

        An audience segment is a group of users that can be targeted by a Billboard. This API only permits managing segments you create and maintain yourself.
      operationId: Segments_createManuallyManagedSegment
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsCreateManuallyManagedSegmentResponse'
          description: A manually managed audience segment
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsCreateManuallyManagedSegment401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: Create a manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-segments
      x-accepts: application/json
  /api/segments/{id}:
    delete:
      description: |-
        This endpoint allows the client to delete an audience segment specified by ID.

        Audience segments cannot be deleted if there are still any Billboards using them.
      operationId: Segments_deleteManuallyManagedSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsDeleteManuallyManagedSegmentResponse'
          description: The deleted audience segment
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsDeleteManuallyManagedSegment401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsDeleteManuallyManagedSegment404Response'
          description: Audience Segment Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsDeleteManuallyManagedSegment409Response'
          description: Audience segment could not be deleted
          x-do-not-generate: true
      summary: Delete a manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-segments-id
      x-accepts: application/json
    get:
      description: This endpoint allows the client to retrieve a single manually-managed
        audience segment specified by ID.
      operationId: Segments_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4
                created_at: 2023-12-15T11:15:30.937+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.937+11:00
                user_count: 3
              schema:
                $ref: '#/components/schemas/SegmentsGetByIdResponse'
              x-konfig-original-example:
                id: 4
                created_at: 2023-12-15T11:15:30.937+11:00
                type_of: manual
                updated_at: 2023-12-15T11:15:30.937+11:00
                user_count: 3
          description: The audience segment
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsGetById401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsGetById404Response'
          description: Audience Segment Not Found
          x-do-not-generate: true
      summary: A manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-segments-id
      x-accepts: application/json
  /api/segments/{id}/users:
    get:
      description: "This endpoint allows the client to retrieve a list of the users\
        \ in an audience segment specified by ID. The endpoint supports pagination,\
        \ and each page will contain `30` users by default."
      operationId: Segments_getUserListInSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - summary: null
                type_of: user
                id: 935
                username: username55
                name: Douglas "Ervin" \:/ Homenick
                twitter_username: twitter55
                github_username: github55
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/935/f305ebc2-4b79-4bd2-8cf3-068dce1744f1.jpeg
              - summary: null
                type_of: user
                id: 936
                username: username56
                name: Cheree "Brandon" \:/ Kilback
                twitter_username: twitter56
                github_username: github56
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/936/c39ca408-c6f0-4812-b69e-98ac37b03526.jpeg
              - summary: null
                type_of: user
                id: 937
                username: username57
                name: Reta "Janetta" \:/ Heathcote
                twitter_username: twitter57
                github_username: github57
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/937/d2b7e4ec-9c26-401f-83dc-18852e2d5617.jpeg
              schema:
                $ref: '#/components/schemas/SegmentsGetUserListInSegmentResponse'
              x-konfig-original-example:
              - type_of: user
                id: 935
                username: username55
                name: Douglas "Ervin" \:/ Homenick
                twitter_username: twitter55
                github_username: github55
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/935/f305ebc2-4b79-4bd2-8cf3-068dce1744f1.jpeg
              - type_of: user
                id: 936
                username: username56
                name: Cheree "Brandon" \:/ Kilback
                twitter_username: twitter56
                github_username: github56
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/936/c39ca408-c6f0-4812-b69e-98ac37b03526.jpeg
              - type_of: user
                id: 937
                username: username57
                name: Reta "Janetta" \:/ Heathcote
                twitter_username: twitter57
                github_username: github57
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/937/d2b7e4ec-9c26-401f-83dc-18852e2d5617.jpeg
          description: A List of users in the audience segment
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsGetUserListInSegment401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsGetUserListInSegment404Response'
          description: Audience Segment Not Found
          x-do-not-generate: true
      summary: Users in a manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-segments-id-users
      x-accepts: application/json
  /api/segments/{id}/add_users:
    put:
      description: |-
        This endpoint allows the client to add users in bulk to an audience segment specified by ID.

        Successes are users that were included in the segment (even if they were already in it), and failures are users that could not be added to the segment.
      operationId: Segments_addUsersToSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentUserIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsAddUsersToSegmentResponse'
          description: Result of adding the users to the segment.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsAddUsersToSegment401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsAddUsersToSegment404Response'
          description: Audience Segment Not Found
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsAddUsersToSegment422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Add users to a manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-segments-id-add_users
      x-content-type: application/json
      x-accepts: application/json
  /api/segments/{id}/remove_users:
    put:
      description: |-
        This endpoint allows the client to remove users in bulk from an audience segment specified by ID.

        Successes are users that were removed; failures are users that weren't a part of the segment.
      operationId: Segments_removeUsersFromSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentUserIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsRemoveUsersFromSegmentResponse'
          description: Result of removing the users to the segment.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsRemoveUsersFromSegment401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsRemoveUsersFromSegment404Response'
          description: Audience Segment Not Found
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsRemoveUsersFromSegment422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Remove users from a manually managed audience segment
      tags:
      - segments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-segments-id-remove_users
      x-content-type: application/json
      x-accepts: application/json
  /api/billboards:
    get:
      description: This endpoint allows the client to retrieve a list of all billboards.
      operationId: Billboards_getList
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/BillboardsGetListResponse'
              x-konfig-original-example: []
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsGetList401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: Billboards
      tags:
      - billboards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-billboards
      x-accepts: application/json
    post:
      description: This endpoint allows the client to create a new billboard.
      operationId: Billboards_createNewBillboard
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillboardsCreateNewBillboardRequest'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 2
                approved: true
                audience_segment_id: null
                body_markdown: |-
                  # Hi, this is ad
                  Yep, it's an ad
                cached_tag_list: ""
                clicks_count: 0
                created_at: 2023-12-15T11:15:34.267+11:00
                creator_id: null
                custom_display_label: null
                display_to: all
                exclude_article_ids: ""
                impressions_count: 0
                name: Example Billboard
                organization_id: null
                placement_area: post_comments
                priority: false
                processed_html: "<h1>  <a name=\"hi-this-is-ad\" href=\"#hi-this-is-ad\"\
                  >  </a>  Hi, this is ad</h1><p>Yep, it's an ad</p>"
                published: true
                render_mode: forem_markdown
                success_rate: 0
                template: authorship_box
                type_of: in_house
                updated_at: 2023-12-15T11:15:34.267+11:00
                weight: 1
                audience_segment_type: null
                tag_list: ""
                target_geolocations:
                - US-WA
                - CA-BC
              schema:
                $ref: '#/components/schemas/BillboardsCreateNewBillboardResponse'
              x-konfig-original-example:
                id: 2
                approved: true
                body_markdown: |-
                  # Hi, this is ad
                  Yep, it's an ad
                cached_tag_list: ""
                clicks_count: 0
                created_at: 2023-12-15T11:15:34.267+11:00
                display_to: all
                exclude_article_ids: ""
                impressions_count: 0
                name: Example Billboard
                placement_area: post_comments
                priority: false
                processed_html: "<h1>  <a name=\"hi-this-is-ad\" href=\"#hi-this-is-ad\"\
                  >  </a>  Hi, this is ad</h1><p>Yep, it's an ad</p>"
                published: true
                render_mode: forem_markdown
                success_rate: 0
                template: authorship_box
                type_of: in_house
                updated_at: 2023-12-15T11:15:34.267+11:00
                weight: 1
                tag_list: ""
                target_geolocations:
                - US-WA
                - CA-BC
          description: A billboard
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsCreateNewBillboard401Response'
          description: unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsCreateNewBillboard422Response'
          description: unprocessable
          x-do-not-generate: true
      summary: Create a billboard
      tags:
      - billboards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-billboards
      x-content-type: application/json
      x-accepts: application/json
  /api/billboards/{id}:
    get:
      description: "This endpoint allows the client to retrieve a single billboard,\
        \ via its id."
      operationId: Billboards_getById
      parameters:
      - description: The ID of the billboard.
        example: 123
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 123
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsGetByIdResponse'
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsGetById401Response'
          description: unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsGetById404Response'
          description: Unknown Billboard ID
          x-do-not-generate: true
      summary: A billboard (by id)
      tags:
      - billboards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-billboards-id
      x-accepts: application/json
    put:
      description: "This endpoint allows the client to update the attributes of a\
        \ single billboard, via its id."
      operationId: Billboards_updateById
      parameters:
      - description: The ID of the billboard.
        example: 123
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillboardsUpdateByIdRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                approved: false
                body_markdown: Hello _hey_ Hey hey 3
                creator_id: null
                display_to: all
                name: Billboard 4
                organization_id: 7
                placement_area: sidebar_left
                published: false
                type_of: in_house
                exclude_article_ids: ""
                weight: 1
                audience_segment_id: null
                priority: false
                custom_display_label: null
                template: authorship_box
                render_mode: forem_markdown
                cached_tag_list: ""
                id: 4
                clicks_count: 0
                created_at: 2023-12-15T11:15:34.735+11:00
                impressions_count: 0
                processed_html: <p>Hello <em>hey</em> Hey hey 3</p>
                success_rate: 0
                updated_at: 2023-12-15T11:15:34.738+11:00
                audience_segment_type: null
                tag_list: ""
                target_geolocations: []
              schema:
                $ref: '#/components/schemas/BillboardsUpdateByIdResponse'
              x-konfig-original-example:
                approved: false
                body_markdown: Hello _hey_ Hey hey 3
                display_to: all
                name: Billboard 4
                organization_id: 7
                placement_area: sidebar_left
                published: false
                type_of: in_house
                exclude_article_ids: ""
                weight: 1
                priority: false
                template: authorship_box
                render_mode: forem_markdown
                cached_tag_list: ""
                id: 4
                clicks_count: 0
                created_at: 2023-12-15T11:15:34.735+11:00
                impressions_count: 0
                processed_html: <p>Hello <em>hey</em> Hey hey 3</p>
                success_rate: 0
                updated_at: 2023-12-15T11:15:34.738+11:00
                tag_list: ""
                target_geolocations: []
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsUpdateById401Response'
          description: unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsUpdateById404Response'
          description: not found
          x-do-not-generate: true
      summary: Update a billboard by ID
      tags:
      - billboards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-billboards-id
      x-content-type: application/json
      x-accepts: application/json
  /api/billboards/{id}/unpublish:
    put:
      description: This endpoint allows the client to remove a billboard from rotation
        by un-publishing it.
      operationId: Billboards_unpublishBillboard
      parameters:
      - description: The ID of the billboard to unpublish.
        example: 123
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 123
      responses:
        "204":
          description: no content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsUnpublishBillboardResponse'
          description: unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillboardsUnpublishBillboard404Response'
          description: not found
          x-do-not-generate: true
      summary: Unpublish a billboard
      tags:
      - billboards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-billboards-id-unpublish
      x-accepts: application/json
  /api/comments:
    get:
      description: |
        This endpoint allows the client to retrieve all comments belonging to an article or podcast episode as threaded conversations.

        It will return the all top level comments with their nested comments as threads. See the format specification for further details.

        It supports pagination, each page will contain `50` top level comments (and as many child comments they have) by default.

        If the page parameter is not passed, all comments of an article or podcast will be returned.
      operationId: Comments_getAllThreaded
      parameters:
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      - description: Article identifier.
        example: "321"
        explode: true
        in: query
        name: a_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "321"
      - description: Podcast Episode identifier.
        example: "321"
        explode: true
        in: query
        name: p_id
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: "321"
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - type_of: comment
                id_code: "1"
                created_at: 2023-12-15T00:15:35Z
                body_html: |+
                  <p>Poutine try-hard migas.</p>

                user:
                  name: Denese "Adriene" \:/ Leffler
                  username: username121
                  twitter_username: twitter121
                  github_username: github121
                  user_id: 1001
                  website_url: null
                  profile_image: /uploads/user/profile_image/1001/5e43495c-e279-4d6b-a6b9-3409c368d2f5.jpeg
                  profile_image_90: /uploads/user/profile_image/1001/5e43495c-e279-4d6b-a6b9-3409c368d2f5.jpeg
                children: []
              schema:
                $ref: '#/components/schemas/CommentsGetAllThreadedResponse'
              x-konfig-original-example:
              - type_of: comment
                id_code: "1"
                created_at: 2023-12-15T00:15:35Z
                body_html: |+
                  <p>Poutine try-hard migas.</p>

                user:
                  name: Denese "Adriene" \:/ Leffler
                  username: username121
                  twitter_username: twitter121
                  github_username: github121
                  user_id: 1001
                  profile_image: /uploads/user/profile_image/1001/5e43495c-e279-4d6b-a6b9-3409c368d2f5.jpeg
                  profile_image_90: /uploads/user/profile_image/1001/5e43495c-e279-4d6b-a6b9-3409c368d2f5.jpeg
                children: []
          description: A List of Comments
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsGetAllThreaded404Response'
          description: Resource Not Found
          x-do-not-generate: true
      security: []
      summary: Comments
      tags:
      - comments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-comments
      x-accepts: application/json
  /api/comments/{id}:
    get:
      description: |-
        This endpoint allows the client to retrieve a comment as well as his descendants comments.

          It will return the required comment (the root) with its nested descendants as a thread.

          See the format specification for further details.
      operationId: Comments_getThreadedComment
      parameters:
      - description: Comment identifier.
        example: 321
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
        x-konfig-original-example: 321
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsGetThreadedCommentResponse'
          description: A List of the Comments
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsGetThreadedComment404Response'
          description: Comment Not Found
          x-do-not-generate: true
      security: []
      summary: Comment by id
      tags:
      - comments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-comments-id
      x-accepts: application/json
  /api/follows/tags:
    get:
      description: This endpoint allows the client to retrieve a list of the tags
        they follow.
      operationId: Followedtags_getTagList
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 46
                name: tag3
                points: 1
              - id: 47
                name: tag4
                points: 1
              schema:
                $ref: '#/components/schemas/FollowedtagsGetTagListResponse'
              x-konfig-original-example:
              - id: 46
                name: tag3
                points: 1
              - id: 47
                name: tag4
                points: 1
          description: A List of followed tags
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowedtagsGetTagList401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: Followed Tags
      tags:
      - followed_tags
      - tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-follows-tags
      x-accepts: application/json
  /api/followers/users:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of the followers they have.
                "Followers" are users that are following other users on the website.
                It supports pagination, each page will contain 80 followers by default.
      operationId: Followers_getList
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      - description: |-
          Default is 'created_at'. Specifies the sort order for the created_at param of the follow
                                          relationship. To sort by newest followers first (descending order) specify
                                          ?sort=-created_at.
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: created_at
      responses:
        "200":
          content:
            application/json:
              example:
              - type_of: user_follower
                id: 6
                created_at: 2023-12-15T00:15:36Z
                user_id: 1012
                name: Moises "Eddie" \:/ Johns
                path: /username132
                username: username132
                profile_image: /uploads/user/profile_image/1012/bdceff13-fec1-4040-8999-fda3de5d20ad.jpeg
              - type_of: user_follower
                id: 5
                created_at: 2023-12-15T00:15:36Z
                user_id: 1010
                name: Bianca "Bryan" \:/ Turcotte
                path: /username130
                username: username130
                profile_image: /uploads/user/profile_image/1010/2a301706-4678-449a-95b9-75e71500015b.jpeg
              schema:
                $ref: '#/components/schemas/FollowersGetListResponse'
              x-konfig-original-example:
              - type_of: user_follower
                id: 6
                created_at: 2023-12-15T00:15:36Z
                user_id: 1012
                name: Moises "Eddie" \:/ Johns
                path: /username132
                username: username132
                profile_image: /uploads/user/profile_image/1012/bdceff13-fec1-4040-8999-fda3de5d20ad.jpeg
              - type_of: user_follower
                id: 5
                created_at: 2023-12-15T00:15:36Z
                user_id: 1010
                name: Bianca "Bryan" \:/ Turcotte
                path: /username130
                username: username130
                profile_image: /uploads/user/profile_image/1010/2a301706-4678-449a-95b9-75e71500015b.jpeg
          description: A List of followers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowersGetList401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: Followers
      tags:
      - followers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-followers-users
      x-accepts: application/json
  /api/organizations/{username}:
    get:
      description: This endpoint allows the client to retrieve a single organization
        by their username
      operationId: Organizations_getByUsername
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                summary: Biodiesel sustainable letterpress portland chartreuse. Authentic
                  post-ironic everyday skateboard franzen thundercats.
                type_of: organization
                id: 12
                username: org12
                name: Sporer Inc
                twitter_username: org2359
                github_username: org5109
                url: http://baumbach-smitham.net/lavonia_emard
                location: null
                tech_stack: null
                tag_line: null
                story: null
                joined_at: 2023-12-15T00:15:36Z
                profile_image: /uploads/organization/profile_image/12/f0728df4-7a41-474c-8675-aa2b31a8d84c.png
              schema:
                $ref: '#/components/schemas/OrganizationsGetByUsernameResponse'
              x-konfig-original-example:
                summary: Biodiesel sustainable letterpress portland chartreuse. Authentic
                  post-ironic everyday skateboard franzen thundercats.
                type_of: organization
                id: 12
                username: org12
                name: Sporer Inc
                twitter_username: org2359
                github_username: org5109
                url: http://baumbach-smitham.net/lavonia_emard
                joined_at: 2023-12-15T00:15:36Z
                profile_image: /uploads/organization/profile_image/12/f0728df4-7a41-474c-8675-aa2b31a8d84c.png
          description: An Organization
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetByUsername404Response'
          description: Not Found
          x-do-not-generate: true
      security: []
      summary: An organization (by username)
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-organizations-username
      x-accepts: application/json
  /api/organizations/{organization_id_or_username}/users:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of users belonging to the organization

        It supports pagination, each page will contain `30` users by default.
      operationId: Organizations_listUsers
      parameters:
      - explode: false
        in: path
        name: organization_id_or_username
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - summary: null
                type_of: user
                id: 1025
                username: username145
                name: Lennie "Lacy" \:/ Jaskolski
                twitter_username: twitter145
                github_username: github145
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1025/6c6a3071-cc34-41fb-9a03-811eca66e09d.jpeg
              - summary: null
                type_of: user
                id: 1026
                username: username146
                name: Iva "Deon" \:/ Bernhard
                twitter_username: twitter146
                github_username: github146
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1026/08be477d-61b1-4140-b1af-0608ba9fc9cd.jpeg
              schema:
                $ref: '#/components/schemas/OrganizationsListUsersResponse'
              x-konfig-original-example:
              - type_of: user
                id: 1025
                username: username145
                name: Lennie "Lacy" \:/ Jaskolski
                twitter_username: twitter145
                github_username: github145
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1025/6c6a3071-cc34-41fb-9a03-811eca66e09d.jpeg
              - type_of: user
                id: 1026
                username: username146
                name: Iva "Deon" \:/ Bernhard
                twitter_username: twitter146
                github_username: github146
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1026/08be477d-61b1-4140-b1af-0608ba9fc9cd.jpeg
          description: An Organization's users (with ID)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsListUsers404Response'
          description: Not Found
          x-do-not-generate: true
      security: []
      summary: Organization's users
      tags:
      - organizations
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-organizations-organization_id_or_username-users
      x-accepts: application/json
  /api/organizations/{organization_id_or_username}/articles:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of Articles belonging to the organization

        It supports pagination, each page will contain `30` users by default.
      operationId: Organizations_listArticles
      parameters:
      - explode: false
        in: path
        name: organization_id_or_username
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - tags: "javascript, html, discuss"
                title: To Say Nothing of the Dog26
                description: Readymade literally fanny pack squid slow-carb crucifix
                  mumblecore authentic. Kickstarter put a bird...
                type_of: article
                id: 27
                readable_publish_date: Dec 15
                slug: to-say-nothing-of-the-dog26-2oic
                path: /org18/to-say-nothing-of-the-dog26-2oic
                url: http://forem.test/org18/to-say-nothing-of-the-dog26-2oic
                comments_count: 0
                public_reactions_count: 0
                collection_id: null
                published_timestamp: 2023-12-15T00:15:37Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                social_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                canonical_url: http://forem.test/org18/to-say-nothing-of-the-dog26-2oic
                created_at: 2023-12-15T00:15:37Z
                edited_at: null
                crossposted_at: null
                published_at: 2023-12-15T00:15:37Z
                last_comment_at: 2023-12-15T00:15:37Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Emmett "Lanelle" \:/ Hills
                  username: username156
                  twitter_username: twitter156
                  github_username: github156
                  user_id: 1036
                  website_url: null
                  profile_image: /uploads/user/profile_image/1036/11b2f734-0a30-48a0-926f-13ff058d4c93.jpeg
                  profile_image_90: /uploads/user/profile_image/1036/11b2f734-0a30-48a0-926f-13ff058d4c93.jpeg
                organization:
                  name: Lindgren-Marquardt
                  username: org18
                  slug: org18
                  profile_image: /uploads/organization/profile_image/18/040332d6-91a3-43e2-b13a-60d17688bf40.png
                  profile_image_90: /uploads/organization/profile_image/18/040332d6-91a3-43e2-b13a-60d17688bf40.png
              schema:
                $ref: '#/components/schemas/OrganizationsListArticlesResponse'
              x-konfig-original-example:
              - tags: "javascript, html, discuss"
                title: To Say Nothing of the Dog26
                description: Readymade literally fanny pack squid slow-carb crucifix
                  mumblecore authentic. Kickstarter put a bird...
                type_of: article
                id: 27
                readable_publish_date: Dec 15
                slug: to-say-nothing-of-the-dog26-2oic
                path: /org18/to-say-nothing-of-the-dog26-2oic
                url: http://forem.test/org18/to-say-nothing-of-the-dog26-2oic
                comments_count: 0
                public_reactions_count: 0
                published_timestamp: 2023-12-15T00:15:37Z
                positive_reactions_count: 0
                cover_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                social_image: http://forem.test/assets/14-5e64731cc7cd63e3b689647d9d3c3e4e1d907690c716d3dd1e356466726a2c2d.png
                canonical_url: http://forem.test/org18/to-say-nothing-of-the-dog26-2oic
                created_at: 2023-12-15T00:15:37Z
                published_at: 2023-12-15T00:15:37Z
                last_comment_at: 2023-12-15T00:15:37Z
                reading_time_minutes: 1
                tag_list:
                - javascript
                - html
                - discuss
                user:
                  name: Emmett "Lanelle" \:/ Hills
                  username: username156
                  twitter_username: twitter156
                  github_username: github156
                  user_id: 1036
                  profile_image: /uploads/user/profile_image/1036/11b2f734-0a30-48a0-926f-13ff058d4c93.jpeg
                  profile_image_90: /uploads/user/profile_image/1036/11b2f734-0a30-48a0-926f-13ff058d4c93.jpeg
                organization:
                  name: Lindgren-Marquardt
                  username: org18
                  slug: org18
                  profile_image: /uploads/organization/profile_image/18/040332d6-91a3-43e2-b13a-60d17688bf40.png
                  profile_image_90: /uploads/organization/profile_image/18/040332d6-91a3-43e2-b13a-60d17688bf40.png
          description: An Organization's Articles (with ID)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsListArticles404Response'
          description: Not Found
          x-do-not-generate: true
      security: []
      summary: Organization's Articles
      tags:
      - organizations
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-organizations-organization_id_or_username-articles
      x-accepts: application/json
  /api/organizations:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of Dev organizations.

          It supports pagination, each page will contain 10 tags by default.
      operationId: Organizations_listOfDev
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 10
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam10to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - summary: Lomo food truck pour-over. 90's quinoa authentic diy muggle
                  magic butcher ethical. Cliche tattooed mustache ethical.
                id: 20
                name: Klein Group
                profile_image:
                  url: /uploads/organization/profile_image/20/6656819e-edbd-4af2-97de-b4457cdfd026.png
                slug: org20
                tag_line: null
                url: http://skiles.org/woodrow
              schema:
                $ref: '#/components/schemas/OrganizationsListOfDevResponse'
              x-konfig-original-example:
              - summary: Lomo food truck pour-over. 90's quinoa authentic diy muggle
                  magic butcher ethical. Cliche tattooed mustache ethical.
                id: 20
                name: Klein Group
                profile_image:
                  url: /uploads/organization/profile_image/20/6656819e-edbd-4af2-97de-b4457cdfd026.png
                slug: org20
                url: http://skiles.org/woodrow
          description: A list of all organizations
      security: []
      summary: Organizations
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-organizations
      x-accepts: application/json
    post:
      description: |-
        This endpoint allows the client to create an organization with the provided parameters.
                It requires a token from a user with `admin` privileges.
      operationId: Organizations_createNewOrganization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateNewOrganizationResponse'
          description: Successful
        "401":
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateNewOrganization422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Create an Organization
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-organizations
      x-content-type: application/json
      x-accepts: application/json
  /api/organizations/{id}:
    delete:
      description: "This endpoint allows the client to delete a single organization,\
        \ specified by id"
      operationId: Organizations_deleteById
      parameters:
      - description: The ID of the organization.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsDeleteByIdResponse'
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsDeleteById401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: Delete an Organization by id
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-organizations-id
      x-accepts: application/json
    get:
      description: This endpoint allows the client to retrieve a single organization
        by their id
      operationId: Organizations_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                summary: Lo-fi tattooed master single-origin coffee umami.
                type_of: organization
                id: 21
                username: org21
                name: "Wehner, Skiles and Reinger"
                twitter_username: org7509
                github_username: org9430
                url: http://haag-stark.io/fredrick.tillman
                location: null
                tech_stack: null
                tag_line: null
                story: null
                joined_at: 2023-12-15T00:15:37Z
                profile_image: /uploads/organization/profile_image/21/38405e52-b2b2-47d3-a55d-2e908713fe06.png
              schema:
                $ref: '#/components/schemas/OrganizationsGetByIdResponse'
              x-konfig-original-example:
                summary: Lo-fi tattooed master single-origin coffee umami.
                type_of: organization
                id: 21
                username: org21
                name: "Wehner, Skiles and Reinger"
                twitter_username: org7509
                github_username: org9430
                url: http://haag-stark.io/fredrick.tillman
                joined_at: 2023-12-15T00:15:37Z
                profile_image: /uploads/organization/profile_image/21/38405e52-b2b2-47d3-a55d-2e908713fe06.png
          description: An Organization
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetById404Response'
          description: Not Found
          x-do-not-generate: true
      security: []
      summary: An organization (by id)
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-organizations-id
      x-accepts: application/json
    put:
      description: This endpoint allows the client to update an existing organization.
      operationId: Organizations_updateById
      parameters:
      - description: The ID of the organization to update.
        example: 123
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsUpdateByIdResponse'
          description: An Organization
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsUpdateById401Response'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsUpdateById404Response'
          description: organization Not Found
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsUpdateById422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Update an organization by id
      tags:
      - organizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-organizations-id
      x-content-type: application/json
      x-accepts: application/json
  /api/pages:
    get:
      description: This endpoint allows the client to retrieve details for all Page
        objects.
      operationId: Pages_listAllDetails
      responses:
        "200":
          content:
            application/json:
              example:
              - title: For Whom the Bell Tolls
                description: Reprehenderit quia et voluptate.
                id: 1
                slug: onion-book
                is_top_level_path: false
                landing_page: false
                body_html: null
                body_json: null
                body_markdown: Enim pariatur aut ea.
                processed_html: |+
                  <p>Enim pariatur aut ea.</p>

                social_image:
                  url: null
                template: contained
              schema:
                $ref: '#/components/schemas/PagesListAllDetailsResponse'
              x-konfig-original-example:
              - title: For Whom the Bell Tolls
                description: Reprehenderit quia et voluptate.
                id: 1
                slug: onion-book
                is_top_level_path: false
                landing_page: false
                body_markdown: Enim pariatur aut ea.
                processed_html: |+
                  <p>Enim pariatur aut ea.</p>

                social_image: {}
                template: contained
          description: successful
      security: []
      summary: show details for all pages
      tags:
      - pages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-pages
      x-accepts: application/json
    post:
      description: This endpoint allows the client to create a new page.
      operationId: Pages_createNewPage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagesCreateNewPageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCreateNewPageResponse'
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCreateNewPage401Response'
          description: unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCreateNewPage422Response'
          description: unprocessable
          x-do-not-generate: true
      summary: pages
      tags:
      - pages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-pages
      x-content-type: application/json
      x-accepts: application/json
  /api/pages/{id}:
    delete:
      description: "This endpoint allows the client to delete a single Page object,\
        \ specified by ID."
      operationId: Pages_removePageById
      parameters:
      - description: The ID of the page.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "200":
          content:
            application/json:
              example:
                title: After Many a Summer Dies the Swan
                description: Doloribus blanditiis delectus quibusdam.
                id: 10
                slug: exhibition_nursery
                is_top_level_path: false
                landing_page: false
                body_html: null
                body_json: null
                body_markdown: Laudantium sit quod blanditiis.
                processed_html: |+
                  <p>Laudantium sit quod blanditiis.</p>

                social_image:
                  url: null
                template: contained
              schema:
                $ref: '#/components/schemas/Page'
              x-konfig-original-example:
                title: After Many a Summer Dies the Swan
                description: Doloribus blanditiis delectus quibusdam.
                id: 10
                slug: exhibition_nursery
                is_top_level_path: false
                landing_page: false
                body_markdown: Laudantium sit quod blanditiis.
                processed_html: |+
                  <p>Laudantium sit quod blanditiis.</p>

                social_image: {}
                template: contained
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesRemovePageByIdResponse'
          description: unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesRemovePageById422Response'
          description: unprocessable
          x-do-not-generate: true
      summary: remove a page
      tags:
      - pages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-pages-id
      x-accepts: application/json
    get:
      description: "This endpoint allows the client to retrieve details for a single\
        \ Page object, specified by ID."
      operationId: Pages_getDetails
      parameters:
      - description: The ID of the page.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "200":
          content:
            application/json:
              example:
                title: Dance Dance Dance
                description: Vitae eos corrupti explicabo.
                id: 6
                slug: cutting_deport
                is_top_level_path: false
                landing_page: false
                body_html: null
                body_json: null
                body_markdown: Atque aut qui nisi.
                processed_html: |+
                  <p>Atque aut qui nisi.</p>

                social_image:
                  url: null
                template: contained
              schema:
                $ref: '#/components/schemas/Page'
              x-konfig-original-example:
                title: Dance Dance Dance
                description: Vitae eos corrupti explicabo.
                id: 6
                slug: cutting_deport
                is_top_level_path: false
                landing_page: false
                body_markdown: Atque aut qui nisi.
                processed_html: |+
                  <p>Atque aut qui nisi.</p>

                social_image: {}
                template: contained
          description: successful
      security: []
      summary: show details for a page
      tags:
      - pages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-pages-id
      x-accepts: application/json
    put:
      description: "This endpoint allows the client to retrieve details for a single\
        \ Page object, specified by ID."
      operationId: Pages_updatePageDetails
      parameters:
      - description: The ID of the page.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
      responses:
        "200":
          content:
            application/json:
              example:
                title: New Title
                description: Qui aspernatur illo aut.
                id: 7
                slug: distant_provision
                is_top_level_path: false
                landing_page: false
                body_html: null
                body_json: null
                body_markdown: Quia rerum officiis quod.
                processed_html: |+
                  <p>Quia rerum officiis quod.</p>

                social_image:
                  url: null
                template: contained
              schema:
                $ref: '#/components/schemas/Page'
              x-konfig-original-example:
                title: New Title
                description: Qui aspernatur illo aut.
                id: 7
                slug: distant_provision
                is_top_level_path: false
                landing_page: false
                body_markdown: Quia rerum officiis quod.
                processed_html: |+
                  <p>Quia rerum officiis quod.</p>

                social_image: {}
                template: contained
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesUpdatePageDetailsResponse'
          description: unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesUpdatePageDetails422Response'
          description: unprocessable
          x-do-not-generate: true
      summary: update details for a page
      tags:
      - pages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-pages-id
      x-content-type: application/json
      x-accepts: application/json
  /api/podcast_episodes:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of podcast episodes.
                "Podcast episodes" are episodes belonging to podcasts.
                It will only return active (reachable) podcast episodes that belong to published podcasts available on the platform, ordered by descending publication date.
                It supports pagination, each page will contain 30 articles by default.
      operationId: Podcastepisodes_listByDescendingPublicationDate
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      - description: Using this parameter will retrieve episodes belonging to a specific
          podcast.
        example: codenewbie
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: codenewbie
      responses:
        "200":
          content:
            application/json:
              example:
              - title: "14"
                type_of: podcast_episodes
                class_name: PodcastEpisode
                id: 2
                path: /codenewbie/slug-2
                image_url: /uploads/podcast/image/2/74b69d3b-45d0-4dcc-82e8-aae16f3f3afb.jpeg
                podcast:
                  title: Brooklyn Black
                  slug: codenewbie
                  image_url: /uploads/podcast/image/2/74b69d3b-45d0-4dcc-82e8-aae16f3f3afb.jpeg
              schema:
                $ref: '#/components/schemas/PodcastepisodesListByDescendingPublicationDateResponse'
              x-konfig-original-example:
              - title: "14"
                type_of: podcast_episodes
                class_name: PodcastEpisode
                id: 2
                path: /codenewbie/slug-2
                image_url: /uploads/podcast/image/2/74b69d3b-45d0-4dcc-82e8-aae16f3f3afb.jpeg
                podcast:
                  title: Brooklyn Black
                  slug: codenewbie
                  image_url: /uploads/podcast/image/2/74b69d3b-45d0-4dcc-82e8-aae16f3f3afb.jpeg
          description: A List of Podcast episodes filtered by username
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastepisodesListByDescendingPublicationDate404Response'
          description: Unknown Podcast username
          x-do-not-generate: true
      security: []
      summary: Podcast Episodes
      tags:
      - podcast_episodes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-podcast_episodes
      x-accepts: application/json
  /api/profile_images/{username}:
    get:
      description: |-
        This endpoint allows the client to retrieve a user or organization profile image information by its
                corresponding username.
      operationId: ProfileImages_getByUsername
      parameters:
      - description: The parameter is the username of the user or the username of
          the organization.
        example: janedoe
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: janedoe
      responses:
        "200":
          content:
            application/json:
              example:
                type_of: profile_image
                image_of: user
                profile_image: /uploads/user/profile_image/1060/88048a31-60e1-41af-8d6d-5a5bd37a6767.jpeg
                profile_image_90: /uploads/user/profile_image/1060/88048a31-60e1-41af-8d6d-5a5bd37a6767.jpeg
              schema:
                $ref: '#/components/schemas/ProfileImagesGetByUsernameResponse'
              x-konfig-original-example:
                type_of: profile_image
                image_of: user
                profile_image: /uploads/user/profile_image/1060/88048a31-60e1-41af-8d6d-5a5bd37a6767.jpeg
                profile_image_90: /uploads/user/profile_image/1060/88048a31-60e1-41af-8d6d-5a5bd37a6767.jpeg
          description: An object containing profile image details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileImagesGetByUsername404Response'
          description: Resource Not Found
          x-do-not-generate: true
      summary: A Users or organizations profile image
      tags:
      - profile images
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-profile_images-username
      x-accepts: application/json
  /api/reactions/toggle:
    post:
      description: |-
        This endpoint allows the client to toggle the user's reaction to a specified reactable (eg, Article, Comment, or User). For examples:
                * "Like"ing an Article will create a new "like" Reaction from the user for that Articles
                * "Like"ing that Article a second time will remove the "like" from the user
      operationId: Reactions_toggleUserReaction
      parameters:
      - explode: true
        in: query
        name: category
        required: true
        schema:
          enum:
          - like
          - unicorn
          - exploding_head
          - raised_hands
          - fire
          type: string
        style: form
      - explode: true
        in: query
        name: reactable_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: reactable_type
        required: true
        schema:
          enum:
          - Comment
          - Article
          - User
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsToggleUserReactionResponse'
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsToggleUserReaction401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: toggle reaction
      tags:
      - reactions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-reactions-toggle
      x-accepts: application/json
  /api/reactions:
    post:
      description: |-
        This endpoint allows the client to create a reaction to a specified reactable (eg, Article, Comment, or User). For examples:
                * "Like"ing an Article will create a new "like" Reaction from the user for that Articles
                * "Like"ing that Article a second time will return the previous "like"
      operationId: Reactions_createReaction
      parameters:
      - explode: true
        in: query
        name: category
        required: true
        schema:
          enum:
          - like
          - unicorn
          - exploding_head
          - raised_hands
          - fire
          type: string
        style: form
      - explode: true
        in: query
        name: reactable_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: reactable_type
        required: true
        schema:
          enum:
          - Comment
          - Article
          - User
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsCreateReactionResponse'
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsCreateReaction401Response'
          description: unauthorized
          x-do-not-generate: true
      summary: create reaction
      tags:
      - reactions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-reactions
      x-accepts: application/json
  /api/readinglist:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of articles that were saved to a Users readinglist.
                It supports pagination, each page will contain `30` articles by default
      operationId: Readinglist_getUserReadinglist
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example: []
              schema:
                $ref: '#/components/schemas/ReadinglistGetUserReadinglistResponse'
              x-konfig-original-example: []
          description: A list of articles in the users readinglist
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinglistGetUserReadinglist401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: Readinglist
      tags:
      - readinglist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-readinglist
      x-accepts: application/json
  /api/tags:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of tags that can be used to tag articles.

        It will return tags ordered by popularity.

        It supports pagination, each page will contain 10 tags by default.
      operationId: Tags_listByPopularity
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 10
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam10to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 86
                name: tag7
                bg_color_hex: null
                text_color_hex: null
              - id: 85
                name: tag6
                bg_color_hex: null
                text_color_hex: null
              - id: 84
                name: tag5
                bg_color_hex: null
                text_color_hex: null
              schema:
                $ref: '#/components/schemas/TagsListByPopularityResponse'
              x-konfig-original-example:
              - id: 86
                name: tag7
              - id: 85
                name: tag6
              - id: 84
                name: tag5
          description: A List of all tags
      security: []
      summary: Tags
      tags:
      - tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-tags
      x-accepts: application/json
  /api/users/{id}/suspend:
    put:
      description: |-
        This endpoint allows the client to suspend a user.

        The user associated with the API key must have any 'admin' or 'moderator' role.

        This specified user will be assigned the 'suspended' role. Suspending a user will stop the
        user from posting new posts and comments. It doesn't delete any of the user's content, just
        prevents them from creating new content while suspended. Users are not notified of their suspension
        in the UI, so if you want them to know about this, you must notify them.
      operationId: Users_suspendUser
      parameters:
      - description: The ID of the user to suspend.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: User successfully unpublished
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSuspendUserResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSuspendUser404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Suspend a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-users-id-suspend
      x-accepts: application/json
  /api/users/{id}/limited:
    delete:
      description: |-
        This endpoint allows the client to remove limits for a user.

        The user associated with the API key must have any 'admin' or 'moderator' role.

        This specified user will be restored to 'general' status. Users are not notified
        of limits in the UI, so if you want them to know about this, you must
        notify them.
      operationId: Users_removeLimits
      parameters:
      - description: The ID of the user to un-limit.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: User successfully un-limited
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveLimitsResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveLimits404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Remove limited for a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-users-id-limited
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows the client to limit a user.

        The user associated with the API key must have any 'admin' or 'moderator' role.

        This specified user will be assigned the 'limited' role. Limiting a user will limit notifications
        generated from new posts and comments. It doesn't delete any of the user's content or prevent them
        from generating new content while limited. Users are not notified of their limits
        in the UI, so if you want them to know about this, you must notify them.
      operationId: Users_addLimitedRole
      parameters:
      - description: The ID of the user to limit.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: User successfully limited
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddLimitedRoleResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddLimitedRole404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Add limited role for a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-users-id-limited
      x-accepts: application/json
  /api/users/{id}/spam:
    delete:
      description: |-
        This endpoint allows the client to remove the spam role for a user.

                  The user associated with the API key must have any 'admin' or 'moderator' role.

                  This specified user will be restored to 'general' status. Users are not notified
                  of removing their spam role in the UI, so if you want them to know about this, you must
                  notify them.
      operationId: Users_removeSpamRole
      parameters:
      - description: The ID of the user to remove the spam role from.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: Successfully removed the spam role from a user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveSpamRoleResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveSpamRole404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Remove spam role from a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-users-id-spam
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows the client to add the spam role to a user.

                  The user associated with the API key must have any 'admin' or 'moderator' role.

                  This specified user will be assigned the 'spam' role. Addding the spam role to a user will stop the
                  user from posting new posts and comments. It doesn't delete any of the user's content, just
                  prevents them from creating new content while having the spam role. Users are not notified of their spaminess
                  in the UI, so if you want them to know about this, you must notify them
      operationId: Users_assignSpamRole
      parameters:
      - description: The ID of the user to assign the spam role.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: Spam role assigned to the user successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAssignSpamRoleResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAssignSpamRole404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Add spam role for a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-users-id-spam
      x-accepts: application/json
  /api/users/{id}/trusted:
    delete:
      description: |-
        This endpoint allows the client to remove the trusted role for a user.
                  The user associated with the API key must have an 'admin' or 'moderator' role.
                  The specified user will be restored to 'general' status. Users are not notified
                  of removing their trusted role in the UI, so if you want them to know about this, you must
                  notify them.
      operationId: Users_removeTrustedRole
      parameters:
      - description: The ID of the user to remove the trusted role from.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: Successfully removed the trusted role from a user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveTrustedRoleResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveTrustedRole404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Remove trusted role from a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-users-id-trusted
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows the client to add the trusted role to a user.
                  The user associated with the API key must have an 'admin' or 'moderator' role.
                  The specified user will be assigned the 'trusted' role. Adding the trusted role to a user
                  allows them to upvote and downvote posts and flag content that needs investigating by admins.
                  Users are notified of this change in the UI, and by email.
      operationId: Users_addTrustedRole
      parameters:
      - description: The ID of the user to assign the trusted role.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: Trusted role assigned to the user successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddTrustedRoleResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddTrustedRole404Response'
          description: Unknown User ID
          x-do-not-generate: true
      summary: Add trusted role for a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-users-id-trusted
      x-accepts: application/json
  /api/users/me:
    get:
      description: This endpoint allows the client to retrieve information about the
        authenticated user
      operationId: Users_getInformation
      responses:
        "200":
          content:
            application/json:
              example:
                summary: null
                type_of: user
                id: 1110
                username: username230
                name: Erich "Ewa" \:/ Prohaska
                twitter_username: twitter230
                github_username: github230
                email: null
                location: null
                website_url: null
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1110/9f031b2e-e68a-445f-b577-f46210dc14cf.jpeg
                badge_ids: []
                followers_count: 0
              schema:
                $ref: '#/components/schemas/UsersGetInformationResponse'
              x-konfig-original-example:
                type_of: user
                id: 1110
                username: username230
                name: Erich "Ewa" \:/ Prohaska
                twitter_username: twitter230
                github_username: github230
                joined_at: "Dec 15, 2023"
                profile_image: /uploads/user/profile_image/1110/9f031b2e-e68a-445f-b577-f46210dc14cf.jpeg
                badge_ids: []
                followers_count: 0
          description: successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetInformation401Response'
          description: Unauthorized
          x-do-not-generate: true
      summary: The authenticated user
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-users-me
      x-accepts: application/json
  /api/users/{id}:
    get:
      description: |-
        This endpoint allows the client to retrieve a single user, either by id
        or by the user's username.

        For complete documentation, see the v0 API docs: https://developers.forem.com/api/v0#tag/users/operation/getUser
      operationId: Users_getByIdOrUsername
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetByIdOrUsernameResponse'
          description: successful
      summary: A User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-users-id
      x-accepts: application/json
  /api/users/{id}/unpublish:
    put:
      description: |-
        This endpoint allows the client to unpublish all of the articles and
        comments created by a user.

        The user associated with the API key must have any 'admin' or 'moderator' role.

        This specified user's articles and comments will be unpublished and will no longer be
        visible to the public. They will remain in the database and will set back to draft status
        on the specified user's  dashboard. Any notifications associated with the specified user's
        articles and comments will be deleted.

        Note this endpoint unpublishes articles and comments asychronously: it will return a 204 NO CONTENT
        status code immediately, but the articles and comments will not be unpublished until the
        request is completed on the server.
      operationId: Users_unpublishUserArticlesAndComments
      parameters:
      - description: The ID of the user to unpublish.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          minimum: 1
          type: integer
        style: simple
        x-konfig-original-example: 1
      responses:
        "204":
          description: User's articles and comments successfully unpublished
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUnpublishUserArticlesAndCommentsResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUnpublishUserArticlesAndComments404Response'
          description: Unknown User ID (still accepted for async processing)
          x-do-not-generate: true
      summary: Unpublish a User's Articles and Comments
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-users-id-unpublish
      x-accepts: application/json
  /api/admin/users:
    post:
      description: |-
        This endpoint allows the client to trigger an invitation to the provided email address.

                It requires a token from a user with `super_admin` privileges.
      operationId: Users_inviteUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInviteParam'
      responses:
        "200":
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInviteUserResponse'
          description: Unauthorized
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInviteUser422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Invite a User
      tags:
      - users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-admin-users
      x-content-type: application/json
      x-accepts: application/json
  /api/videos:
    get:
      description: |-
        This endpoint allows the client to retrieve a list of articles that are uploaded with a video.

        It will only return published video articles ordered by descending popularity.

        It supports pagination, each page will contain 24 articles by default.
      operationId: Videos_listByPopularity
      parameters:
      - description: Pagination page
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        style: form
      - description: Page size (the number of items to return per page). The default
          maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 24
          example: 24
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam24to1000-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - title: Brandy of the Damned33
                type_of: video_article
                id: 34
                path: /username244/brandy-of-the-damned33-2cbm
                cloudinary_video_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/thumbs-video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f-00001.png
                user_id: 1125
                video_duration_in_minutes: 00:00
                video_source_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f.m3u8
                user:
                  name: Effie "Kieth" \:/ Weimann
              - title: O Pioneers!32
                type_of: video_article
                id: 33
                path: /username243/o-pioneers32-1ejl
                cloudinary_video_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/thumbs-video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f-00001.png
                user_id: 1124
                video_duration_in_minutes: 00:00
                video_source_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f.m3u8
                user:
                  name: Preston "Darius" \:/ Runolfsdottir
              schema:
                $ref: '#/components/schemas/VideosListByPopularityResponse'
              x-konfig-original-example:
              - title: Brandy of the Damned33
                type_of: video_article
                id: 34
                path: /username244/brandy-of-the-damned33-2cbm
                cloudinary_video_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/thumbs-video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f-00001.png
                user_id: 1125
                video_duration_in_minutes: 00:00
                video_source_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f.m3u8
                user:
                  name: Effie "Kieth" \:/ Weimann
              - title: O Pioneers!32
                type_of: video_article
                id: 33
                path: /username243/o-pioneers32-1ejl
                cloudinary_video_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/thumbs-video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f-00001.png
                user_id: 1124
                video_duration_in_minutes: 00:00
                video_source_url: https://dw71fyauz7yz9.cloudfront.net/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f/video-upload__1e42eb0bab4abb3c63baeb5e8bdfe69f.m3u8
                user:
                  name: Preston "Darius" \:/ Runolfsdottir
          description: A List of all articles with videos
      security: []
      summary: Articles with a video
      tags:
      - videos
      - articles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-videos
      x-accepts: application/json
components:
  parameters:
    pageParam:
      description: Pagination page
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        example: 1
        format: int32
        minimum: 1
        type: integer
        x-konfig-original-example: 1
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
      style: form
    perPageParam10to1000:
      description: Page size (the number of items to return per page). The default
        maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 10
        example: 10
        format: int32
        maximum: 1000
        minimum: 1
        type: integer
        x-konfig-original-example: 10
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam10to1000-schema
      style: form
    perPageParam24to1000:
      description: Page size (the number of items to return per page). The default
        maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 24
        example: 24
        format: int32
        maximum: 1000
        minimum: 1
        type: integer
        x-konfig-original-example: 24
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam24to1000-schema
      style: form
    perPageParam30to1000:
      description: Page size (the number of items to return per page). The default
        maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 30
        example: 30
        format: int32
        maximum: 1000
        minimum: 1
        type: integer
        x-konfig-original-example: 30
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      style: form
    perPageParam30to100:
      description: Page size (the number of items to return per page). The default
        maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 30
        example: 30
        format: int32
        maximum: 100
        minimum: 1
        type: integer
        x-konfig-original-example: 30
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to100-schema
      style: form
    perPageParam80to1000:
      description: Page size (the number of items to return per page). The default
        maximum value can be overridden by "API_PER_PAGE_MAX" environment variable.
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 80
        example: 80
        format: int32
        maximum: 1000
        minimum: 1
        type: integer
        x-konfig-original-example: 80
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam80to1000-schema
      style: form
    listingCategoryParam:
      description: |-
        Using this parameter will return listings belonging to the
                      requested category.
      example: cfp
      explode: true
      in: query
      name: category
      required: false
      schema:
        type: string
      style: form
      x-konfig-original-example: cfp
  schemas:
    ArticleFlareTag:
      description: Flare tag of the article
      example:
        text_color_hex: text_color_hex
        name: name
        bg_color_hex: bg_color_hex
      properties:
        name:
          type: string
        bg_color_hex:
          description: Background color (hexadecimal)
          nullable: true
          type: string
        text_color_hex:
          description: Text color (hexadecimal)
          nullable: true
          type: string
      type: object
    ArticleIndex:
      description: Representation of an article or post returned in a list
      example:
        readable_publish_date: readable_publish_date
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        title: title
        path: path
        tag_list:
        - tag_list
        - tag_list
        type_of: type_of
        edited_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        cover_image: http://example.com/aeiou
        published_at: 2000-01-23T04:56:07.000+00:00
        published_timestamp: 2000-01-23T04:56:07.000+00:00
        slug: slug
        canonical_url: http://example.com/aeiou
        flare_tag:
          text_color_hex: text_color_hex
          name: name
          bg_color_hex: bg_color_hex
        url: http://example.com/aeiou
        tags: tags
        social_image: http://example.com/aeiou
        positive_reactions_count: 6
        public_reactions_count: 1
        last_comment_at: 2000-01-23T04:56:07.000+00:00
        organization:
          profile_image: http://example.com/aeiou
          name: name
          slug: slug
          profile_image_90: http://example.com/aeiou
          username: username
        reading_time_minutes: 5
        crossposted_at: 2000-01-23T04:56:07.000+00:00
        user:
          profile_image: profile_image
          website_url: http://example.com/aeiou
          name: name
          twitter_username: twitter_username
          github_username: github_username
          profile_image_90: profile_image_90
          username: username
      properties:
        tags:
          type: string
        title:
          type: string
        description:
          type: string
        type_of:
          type: string
        id:
          format: int32
          type: integer
        cover_image:
          format: url
          nullable: true
          type: string
        readable_publish_date:
          type: string
        social_image:
          format: url
          type: string
        tag_list:
          items:
            type: string
          type: array
        slug:
          type: string
        path:
          format: path
          type: string
        url:
          format: url
          type: string
        canonical_url:
          format: url
          type: string
        positive_reactions_count:
          format: int32
          type: integer
        public_reactions_count:
          format: int32
          type: integer
        created_at:
          format: date-time
          type: string
        edited_at:
          format: date-time
          nullable: true
          type: string
        crossposted_at:
          format: date-time
          nullable: true
          type: string
        published_at:
          format: date-time
          type: string
        last_comment_at:
          format: date-time
          type: string
        published_timestamp:
          description: Crossposting or published date time
          format: date-time
          type: string
        reading_time_minutes:
          description: "Reading time, in minutes"
          format: int32
          type: integer
        user:
          $ref: '#/components/schemas/SharedUser'
        flare_tag:
          $ref: '#/components/schemas/ArticleFlareTag'
        organization:
          $ref: '#/components/schemas/SharedOrganization'
      required:
      - canonical_url
      - comments_count
      - cover_image
      - created_at
      - crossposted_at
      - description
      - edited_at
      - id
      - last_comment_at
      - path
      - positive_reactions_count
      - public_reactions_count
      - published_at
      - published_timestamp
      - readable_publish_date
      - reading_time_minutes
      - slug
      - social_image
      - tag_list
      - tags
      - title
      - type_of
      - url
      - user
      type: object
    VideoArticle:
      description: Representation of an Article with video
      example:
        path: path
        user_id: 6
        video_source_url: video_source_url
        cloudinary_video_url: cloudinary_video_url
        video_duration_in_minutes: video_duration_in_minutes
        type_of: type_of
        id: 0
        title: title
        user:
          name: name
      properties:
        title:
          type: string
        type_of:
          type: string
        id:
          format: int64
          type: integer
        path:
          type: string
        cloudinary_video_url:
          type: string
        user_id:
          format: int64
          type: integer
        video_duration_in_minutes:
          type: string
        video_source_url:
          type: string
        user:
          $ref: '#/components/schemas/VideoArticle_user'
      type: object
    Article:
      description: Representation of an Article to be created/updated
      example:
        article:
          body_markdown: body_markdown
          series: series
          main_image: main_image
          organization_id: 0
          description: description
          published: false
          title: title
          canonical_url: canonical_url
          tags: tags
      properties:
        article:
          $ref: '#/components/schemas/Article_article'
      type: object
    Organization:
      description: Representation of an Organization
      example:
        summary: summary
        joined_at: joined_at
        tech_stack: tech_stack
        name: name
        twitter_username: twitter_username
        github_username: github_username
        type_of: type_of
        location: location
        tag_line: tag_line
        url: url
        username: username
        story: story
      properties:
        summary:
          type: string
        type_of:
          type: string
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        url:
          type: string
        location:
          type: string
        joined_at:
          type: string
        tech_stack:
          type: string
        tag_line:
          nullable: true
          type: string
        story:
          nullable: true
          type: string
      type: object
    FollowedTag:
      description: Representation of a followed tag
      example:
        name: name
        id: 0
        points: 6.0274563
      properties:
        id:
          description: Tag id
          format: int64
          type: integer
        name:
          type: string
        points:
          format: float
          type: number
      required:
      - id
      - name
      - points
      type: object
    Tag:
      description: Representation of a tag
      example:
        text_color_hex: text_color_hex
        name: name
        bg_color_hex: bg_color_hex
        id: 0
      properties:
        id:
          description: Tag id
          format: int64
          type: integer
        name:
          type: string
        bg_color_hex:
          nullable: true
          type: string
        text_color_hex:
          nullable: true
          type: string
      type: object
    Page:
      description: Representation of a page object
      example:
        social_image: "{}"
        template: contained
        body_markdown: body_markdown
        is_top_level_path: true
        description: description
        title: title
        slug: slug
        body_json: body_json
      properties:
        title:
          description: Title of the page
          type: string
        description:
          description: "For internal use, helps similar pages from one another"
          type: string
        slug:
          description: "Used to link to this page in URLs, must be unique and URL-safe"
          type: string
        body_markdown:
          description: The text (in markdown) of the ad (required)
          nullable: true
          type: string
        body_json:
          description: "For JSON pages, the JSON body"
          nullable: true
          type: string
        is_top_level_path:
          description: "If true, the page is available at '/{slug}' instead of '/page/{slug}',\
            \ use with caution"
          type: boolean
        social_image:
          nullable: true
          type: object
        template:
          default: contained
          description: Controls what kind of layout the page is rendered in
          enum:
          - contained
          - full_within_layout
          - nav_bar_included
          - json
          example: contained
          type: string
          x-konfig-original-example: contained
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Page-properties-template
      required:
      - description
      - slug
      - template
      - title
      type: object
      x-konfig-is-used-in-successful-response: true
    PodcastEpisodeIndex:
      description: Representation of a podcast episode returned in a list
      example:
        path: path
        image_url: http://example.com/aeiou
        podcast:
          image_url: http://example.com/aeiou
          title: title
          slug: slug
        type_of: type_of
        id: 0
        title: title
        class_name: class_name
      properties:
        title:
          type: string
        type_of:
          type: string
        id:
          format: int32
          type: integer
        class_name:
          type: string
        path:
          format: path
          type: string
        image_url:
          description: Podcast episode image url or podcast image url
          format: url
          type: string
        podcast:
          $ref: '#/components/schemas/SharedPodcast'
      required:
      - class_name
      - id
      - image_url
      - path
      - podcast
      - title
      - type_of
      type: object
    ProfileImage:
      description: A profile image object
      example:
        profile_image: profile_image
        image_of: image_of
        type_of: type_of
        profile_image_90: profile_image_90
      properties:
        type_of:
          description: Return profile_image
          type: string
        image_of:
          description: Determines the type of the profile image owner (user or organization)
          type: string
        profile_image:
          description: Profile image (640x640)
          type: string
        profile_image_90:
          description: Profile image (90x90)
          type: string
      type: object
    SharedUser:
      description: The resource creator
      example:
        profile_image: profile_image
        website_url: http://example.com/aeiou
        name: name
        twitter_username: twitter_username
        github_username: github_username
        profile_image_90: profile_image_90
        username: username
      properties:
        name:
          type: string
        username:
          type: string
        twitter_username:
          nullable: true
          type: string
        github_username:
          nullable: true
          type: string
        website_url:
          format: url
          nullable: true
          type: string
        profile_image:
          description: Profile image (640x640)
          type: string
        profile_image_90:
          description: Profile image (90x90)
          type: string
      type: object
    SharedOrganization:
      description: The organization the resource belongs to
      example:
        profile_image: http://example.com/aeiou
        name: name
        slug: slug
        profile_image_90: http://example.com/aeiou
        username: username
      properties:
        name:
          type: string
        username:
          type: string
        slug:
          type: string
        profile_image:
          description: Profile image (640x640)
          format: url
          type: string
        profile_image_90:
          description: Profile image (90x90)
          format: url
          type: string
      type: object
    User:
      description: The representation of a user returned in a list
      example:
        summary: summary
        joined_at: joined_at
        profile_image: profile_image
        website_url: website_url
        name: name
        twitter_username: twitter_username
        github_username: github_username
        type_of: type_of
        location: location
        id: 0
        username: username
      properties:
        summary:
          nullable: true
          type: string
        type_of:
          type: string
        id:
          format: int64
          type: integer
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        website_url:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        joined_at:
          type: string
        profile_image:
          type: string
      type: object
    ExtendedUser:
      description: The representation of a user
      example:
        summary: summary
        twitter_username: twitter_username
        github_username: github_username
        badge_ids:
        - 6
        - 6
        joined_at: joined_at
        profile_image: profile_image
        website_url: website_url
        name: name
        type_of: type_of
        location: location
        id: 0
        email: email
        username: username
      properties:
        summary:
          nullable: true
          type: string
        type_of:
          type: string
        id:
          format: int64
          type: integer
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        email:
          description: Email (if user allows displaying email on their profile) or
            nil
          nullable: true
          type: string
        website_url:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        joined_at:
          type: string
        profile_image:
          type: string
        badge_ids:
          description: ids of the badges awarded to the user
          items:
            type: integer
          type: array
      type: object
    MyUser:
      description: The representation of a user when accessed by themselves
      example:
        summary: summary
        twitter_username: twitter_username
        github_username: github_username
        badge_ids:
        - 6
        - 6
        joined_at: joined_at
        profile_image: profile_image
        website_url: website_url
        followers_count: 1
        name: name
        type_of: type_of
        location: location
        id: 0
        email: email
        username: username
      properties:
        summary:
          nullable: true
          type: string
        type_of:
          type: string
        id:
          format: int64
          type: integer
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        email:
          description: Email (if user allows displaying email on their profile) or
            nil
          nullable: true
          type: string
        website_url:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        joined_at:
          type: string
        profile_image:
          type: string
        badge_ids:
          description: ids of the badges awarded to the user
          items:
            type: integer
          type: array
        followers_count:
          type: integer
      type: object
    SharedPodcast:
      description: The podcast that the resource belongs to
      example:
        image_url: http://example.com/aeiou
        title: title
        slug: slug
      properties:
        title:
          type: string
        slug:
          type: string
        image_url:
          description: Podcast image url
          format: url
          type: string
      type: object
    Comment:
      description: A Comment on an Article or Podcast Episode
      example:
        image_url: http://example.com/aeiou
        created_at: 2000-01-23T04:56:07.000+00:00
        type_of: type_of
        id_code: id_code
      properties:
        type_of:
          type: string
        id_code:
          type: string
        created_at:
          format: date-time
          type: string
        image_url:
          description: Podcast image url
          format: url
          type: string
      type: object
    UserInviteParam:
      description: User invite parameters
      example:
        name: name
        email: email
      properties:
        email:
          type: string
        name:
          nullable: true
          type: string
      type: object
    Billboard:
      description: "Billboard, aka Widget, ex. Display Ad"
      example:
        audience_segment_id: 5
        display_to: all
        published: true
        target_geolocations:
        - target_geolocations
        - target_geolocations
        placement_area: sidebar_left
        exclude_article_ids: exclude_article_ids
        approved: true
        body_markdown: body_markdown
        tag_list: tag_list
        organization_id: 6
        name: name
        creator_id: 1
        audience_segment_type: manual
        type_of: in_house
        id: 0
      properties:
        id:
          description: The ID of the Billboard
          type: integer
        name:
          description: "For internal use, helps distinguish ads from one another"
          type: string
        body_markdown:
          description: The text (in markdown) of the ad (required)
          type: string
        approved:
          description: Ad must be both published and approved to be in rotation
          type: boolean
        published:
          description: Ad must be both published and approved to be in rotation
          type: boolean
        organization_id:
          description: Identifies the organization to which the ad belongs
          nullable: true
          type: integer
        creator_id:
          description: Identifies the user who created the ad.
          nullable: true
          type: integer
        placement_area:
          description: Identifies which area of site layout the ad can appear in
          enum:
          - sidebar_left
          - sidebar_left_2
          - sidebar_right
          - feed_first
          - feed_second
          - feed_third
          - home_hero
          - post_sidebar
          - post_comments
          type: string
        tag_list:
          description: Tags on which this ad can be displayed (blank is all/any tags)
          type: string
        exclude_article_ids:
          description: "Articles this ad should *not* appear on (blank means no articles\
            \ are disallowed, and this ad can appear next to any/all articles). Comma-separated\
            \ list of integer Article IDs"
          nullable: true
          type: string
        audience_segment_id:
          description: Specifies a specific audience segment who will see this billboard
          type: integer
        audience_segment_type:
          description: Specifies a group of users who will see this billboard (must
            match audience_segment_id if both provided)
          enum:
          - manual
          - trusted
          - posted
          - no_posts_yet
          - dark_theme
          - light_theme
          - no_experience
          - experience1
          - experience2
          - experience3
          - experience4
          - experience5
          type: string
        target_geolocations:
          description: Locations to show this billboard in (blank means it will be
            shown in all locations). Specified as a comma-separated list or array
            of ISO 3166-2 country and optionally region codes)
          items:
            type: string
          type: array
        display_to:
          default: all
          description: Potentially limits visitors to whom the ad is visible
          enum:
          - all
          - logged_in
          - logged_out
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Billboard-properties-display_to
        type_of:
          default: in_house
          description: |
            Types of the billboards:
            in_house (created by admins),
            community (created by an entity, appears on entity's content),
            external ( created by an entity, or a non-entity, can appear everywhere)
          enum:
          - in_house
          - community
          - external
          example: in_house
          type: string
          x-konfig-original-example: in_house
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Billboard-properties-type_of
      required:
      - body_markdown
      - name
      - placement_area
      type: object
    Segment:
      description: A manually managed audience segment
      example:
        user_count: 6
        type_of: manual
        id: 0
      properties:
        id:
          description: The ID of the segment
          type: integer
        type_of:
          default: manual
          description: Marks the segment as manually managed (other types are internal)
          enum:
          - manual
          example: manual
          type: string
          x-konfig-original-example: manual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Segment-properties-type_of
        user_count:
          description: The current number of users in the segment
          type: integer
      type: object
    SegmentUserIds:
      example:
        user_ids:
        - 0
        - 0
        - 0
        - 0
        - 0
      properties:
        user_ids:
          items:
            type: integer
          maxItems: 10000
          type: array
      type: object
    BillboardsCreateNewBillboardRequest:
      items:
        $ref: '#/components/schemas/Billboard'
      type: array
    BillboardsUpdateByIdRequest:
      items:
        $ref: '#/components/schemas/Billboard'
      type: array
    PagesCreateNewPageRequest:
      example:
        template: contained
        body_markdown: body_markdown
        is_top_level_path: true
        description: description
        title: title
        slug: slug
        body_json: body_json
      properties:
        title:
          description: Title of the page
          type: string
        description:
          description: "For internal use, helps similar pages from one another"
          type: string
        slug:
          description: "Used to link to this page in URLs, must be unique and URL-safe"
          type: string
        body_markdown:
          description: The text (in markdown) of the ad (required)
          type: string
        body_json:
          description: "For JSON pages, the JSON body"
          type: string
        is_top_level_path:
          description: "If true, the page is available at '/{slug}' instead of '/page/{slug}',\
            \ use with caution"
          type: boolean
        template:
          default: contained
          description: Controls what kind of layout the page is rendered in
          enum:
          - contained
          - full_within_layout
          - nav_bar_included
          - json
          example: contained
          type: string
          x-konfig-original-example: contained
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageRequest-properties-template
      type: object
    ArticlesListPublishedArticlesResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesCreateNewArticleResponse:
      example:
        tags: []
        title: New article
        description: New post example
        type_of: article
        id: 2
        readable_publish_date: Dec 15
        slug: new-article-2io1
        path: /username2/new-article-2io1
        url: http://forem.test/username2/new-article-2io1
        comments_count: 0
        public_reactions_count: 0
        collection_id: 1
        published_timestamp: 2023-12-15T00:15:27Z
        positive_reactions_count: 0
        cover_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        social_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        canonical_url: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
        created_at: 2023-12-15T00:15:27Z
        edited_at: null
        crossposted_at: null
        published_at: 2023-12-15T00:15:27Z
        last_comment_at: 2023-12-15T00:15:27Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Carmen "Andre" \:/ Rodriguez
          username: username2
          twitter_username: twitter2
          github_username: github2
          user_id: 882
          website_url: null
          profile_image: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          profile_image_90: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
      properties:
        tags:
          items:
            type: string
          type: array
        title:
          example: New article
          type: string
          x-konfig-original-example: New article
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-title
        description:
          example: New post example
          type: string
          x-konfig-original-example: New post example
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-description
        type_of:
          example: article
          type: string
          x-konfig-original-example: article
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-type_of
        id:
          example: 2
          type: number
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-id
        readable_publish_date:
          example: Dec 15
          type: string
          x-konfig-original-example: Dec 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-readable_publish_date
        slug:
          example: new-article-2io1
          type: string
          x-konfig-original-example: new-article-2io1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-slug
        path:
          example: /username2/new-article-2io1
          type: string
          x-konfig-original-example: /username2/new-article-2io1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-path
        url:
          example: http://forem.test/username2/new-article-2io1
          type: string
          x-konfig-original-example: http://forem.test/username2/new-article-2io1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-url
        comments_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-comments_count
        public_reactions_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-public_reactions_count
        collection_id:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-collection_id
        published_timestamp:
          example: 2023-12-15T00:15:27Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:27Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-published_timestamp
        positive_reactions_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-positive_reactions_count
        cover_image:
          example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          type: string
          x-konfig-original-example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-cover_image
        social_image:
          example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          type: string
          x-konfig-original-example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-social_image
        canonical_url:
          example: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
          type: string
          x-konfig-original-example: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-canonical_url
        created_at:
          example: 2023-12-15T00:15:27Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:27Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-created_at
        edited_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-edited_at
          example: null
        crossposted_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-crossposted_at
          example: null
        published_at:
          example: 2023-12-15T00:15:27Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:27Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-published_at
        last_comment_at:
          example: 2023-12-15T00:15:27Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:27Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-last_comment_at
        reading_time_minutes:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-reading_time_minutes
        tag_list:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-tag_list
        body_html:
          example: |+
            <p><strong>New</strong> body for the article</p>

          type: string
          x-konfig-original-example: |+
            <p><strong>New</strong> body for the article</p>

          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-body_html
        body_markdown:
          example: '**New** body for the article'
          type: string
          x-konfig-original-example: '**New** body for the article'
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-body_markdown
        user:
          $ref: '#/components/schemas/ArticlesCreateNewArticleResponse_user'
      type: object
      x-konfig-original-example:
        tags: []
        title: New article
        description: New post example
        type_of: article
        id: 2
        readable_publish_date: Dec 15
        slug: new-article-2io1
        path: /username2/new-article-2io1
        url: http://forem.test/username2/new-article-2io1
        comments_count: 0
        public_reactions_count: 0
        collection_id: 1
        published_timestamp: 2023-12-15T00:15:27Z
        positive_reactions_count: 0
        cover_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        social_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        canonical_url: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
        created_at: 2023-12-15T00:15:27Z
        published_at: 2023-12-15T00:15:27Z
        last_comment_at: 2023-12-15T00:15:27Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Carmen "Andre" \:/ Rodriguez
          username: username2
          twitter_username: twitter2
          github_username: github2
          user_id: 882
          profile_image: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          profile_image_90: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse
      x-konfig-is-used-in-successful-response: true
    ArticlesCreateNewArticle401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesCreateNewArticle422Response:
      example:
        error: "param is missing or the value is empty: article"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: article"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: article"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: article"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesListLatestPublishedResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetByIdResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesUpdateByIdResponse:
      example:
        tags: []
        title: Recalled to Life9
        description: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
          pop-up godard put a...
        type_of: article
        id: 10
        readable_publish_date: Dec 15
        slug: recalled-to-life9-1990
        path: /username11/recalled-to-life9-1990
        url: http://forem.test/username11/recalled-to-life9-1990
        comments_count: 0
        public_reactions_count: 0
        collection_id: null
        published_timestamp: 2023-12-15T00:15:28Z
        positive_reactions_count: 0
        cover_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        social_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        canonical_url: http://forem.test/username11/recalled-to-life9-1990
        created_at: 2023-12-15T00:15:28Z
        edited_at: 2023-12-15T00:15:28Z
        crossposted_at: null
        published_at: 2023-12-15T00:15:28Z
        last_comment_at: 2023-12-15T00:15:28Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Danilo "Morton" \:/ Douglas
          username: username11
          twitter_username: twitter11
          github_username: github11
          user_id: 891
          website_url: null
          profile_image: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          profile_image_90: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
      properties:
        tags:
          items:
            type: string
          type: array
        title:
          example: Recalled to Life9
          type: string
          x-konfig-original-example: Recalled to Life9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-title
        description:
          example: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
            pop-up godard put a...
          type: string
          x-konfig-original-example: Messenger bag kickstarter fingerstache. Green
            juice hammock taxidermy.  Gastropub pop-up godard put a...
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-description
        type_of:
          example: article
          type: string
          x-konfig-original-example: article
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-type_of
        id:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-id
        readable_publish_date:
          example: Dec 15
          type: string
          x-konfig-original-example: Dec 15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-readable_publish_date
        slug:
          example: recalled-to-life9-1990
          type: string
          x-konfig-original-example: recalled-to-life9-1990
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-slug
        path:
          example: /username11/recalled-to-life9-1990
          type: string
          x-konfig-original-example: /username11/recalled-to-life9-1990
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-path
        url:
          example: http://forem.test/username11/recalled-to-life9-1990
          type: string
          x-konfig-original-example: http://forem.test/username11/recalled-to-life9-1990
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-url
        comments_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-comments_count
        public_reactions_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-public_reactions_count
        collection_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-collection_id
          example: null
        published_timestamp:
          example: 2023-12-15T00:15:28Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:28Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-published_timestamp
        positive_reactions_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-positive_reactions_count
        cover_image:
          example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          type: string
          x-konfig-original-example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-cover_image
        social_image:
          example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          type: string
          x-konfig-original-example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-social_image
        canonical_url:
          example: http://forem.test/username11/recalled-to-life9-1990
          type: string
          x-konfig-original-example: http://forem.test/username11/recalled-to-life9-1990
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-canonical_url
        created_at:
          example: 2023-12-15T00:15:28Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:28Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-created_at
        edited_at:
          example: 2023-12-15T00:15:28Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:28Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-edited_at
        crossposted_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-crossposted_at
          example: null
        published_at:
          example: 2023-12-15T00:15:28Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:28Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-published_at
        last_comment_at:
          example: 2023-12-15T00:15:28Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:28Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-last_comment_at
        reading_time_minutes:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-reading_time_minutes
        tag_list:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-tag_list
        body_html:
          example: |+
            <p><strong>New</strong> body for the article</p>

          type: string
          x-konfig-original-example: |+
            <p><strong>New</strong> body for the article</p>

          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-body_html
        body_markdown:
          example: '**New** body for the article'
          type: string
          x-konfig-original-example: '**New** body for the article'
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-body_markdown
        user:
          $ref: '#/components/schemas/ArticlesUpdateByIdResponse_user'
      type: object
      x-konfig-original-example:
        tags: []
        title: Recalled to Life9
        description: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
          pop-up godard put a...
        type_of: article
        id: 10
        readable_publish_date: Dec 15
        slug: recalled-to-life9-1990
        path: /username11/recalled-to-life9-1990
        url: http://forem.test/username11/recalled-to-life9-1990
        comments_count: 0
        public_reactions_count: 0
        published_timestamp: 2023-12-15T00:15:28Z
        positive_reactions_count: 0
        cover_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        social_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        canonical_url: http://forem.test/username11/recalled-to-life9-1990
        created_at: 2023-12-15T00:15:28Z
        edited_at: 2023-12-15T00:15:28Z
        published_at: 2023-12-15T00:15:28Z
        last_comment_at: 2023-12-15T00:15:28Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Danilo "Morton" \:/ Douglas
          username: username11
          twitter_username: twitter11
          github_username: github11
          user_id: 891
          profile_image: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          profile_image_90: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse
      x-konfig-is-used-in-successful-response: true
    ArticlesUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesUpdateById422Response:
      example:
        error: "param is missing or the value is empty: article"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: article"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: article"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: article"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateById422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesGetByPathResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetByPath404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetByPath404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetByPath404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetByPath404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesGetPublishedListResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetPublishedList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesGetPublishedList200Response:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetUnpublishedListResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetUnpublishedList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesGetAllUserArticlesResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ArticlesGetAllUserArticles401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesUnpublishByIdResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ArticlesUnpublishById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsListAudienceSegmentsResponse:
      items:
        $ref: '#/components/schemas/Segment'
      type: array
      x-konfig-is-used-in-successful-response: true
    SegmentsListAudienceSegments401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsCreateManuallyManagedSegmentResponse:
      example:
        id: 3
        created_at: 2023-12-15T11:15:30.723+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:30.723+11:00
      properties:
        id:
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-id
        created_at:
          example: 2023-12-15T11:15:30.723+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:30.723+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-created_at
        type_of:
          example: manual
          type: string
          x-konfig-original-example: manual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-type_of
        updated_at:
          example: 2023-12-15T11:15:30.723+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:30.723+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-updated_at
      type: object
      x-konfig-original-example:
        id: 3
        created_at: 2023-12-15T11:15:30.723+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:30.723+11:00
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse
      x-konfig-is-used-in-successful-response: true
    SegmentsCreateManuallyManagedSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsDeleteManuallyManagedSegmentResponse:
      example:
        id: 8
        created_at: 2023-12-15T11:15:31.351+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:31.351+11:00
      properties:
        id:
          example: 8
          type: number
          x-konfig-original-example: 8
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-id
        created_at:
          example: 2023-12-15T11:15:31.351+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:31.351+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-created_at
        type_of:
          example: manual
          type: string
          x-konfig-original-example: manual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-type_of
        updated_at:
          example: 2023-12-15T11:15:31.351+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:31.351+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-updated_at
      type: object
      x-konfig-original-example:
        id: 8
        created_at: 2023-12-15T11:15:31.351+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:31.351+11:00
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse
      x-konfig-is-used-in-successful-response: true
    SegmentsDeleteManuallyManagedSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsDeleteManuallyManagedSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsDeleteManuallyManagedSegment409Response:
      example:
        error: Segments cannot be deleted while in use by any billboards
      properties:
        error:
          example: Segments cannot be deleted while in use by any billboards
          type: string
          x-konfig-original-example: Segments cannot be deleted while in use by any
            billboards
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment409Response-properties-error
      type: object
      x-konfig-original-example:
        error: Segments cannot be deleted while in use by any billboards
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment409Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsGetByIdResponse:
      items:
        $ref: '#/components/schemas/Segment'
      type: array
      x-konfig-is-used-in-successful-response: true
    SegmentsGetById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsGetUserListInSegmentResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
      x-konfig-is-used-in-successful-response: true
    SegmentsGetUserListInSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsGetUserListInSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsAddUsersToSegmentResponse:
      example:
        succeeded:
        - 943
        - 944
        - 945
        failed: []
      properties:
        succeeded:
          items:
            example: 943
            type: number
            x-konfig-original-example: 943
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegmentResponse-properties-succeeded-items
          type: array
        failed:
          items:
            type: string
          type: array
      type: object
      x-konfig-original-example:
        succeeded:
        - 943
        - 944
        - 945
        failed: []
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegmentResponse
      x-konfig-is-used-in-successful-response: true
    SegmentsAddUsersToSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsAddUsersToSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsAddUsersToSegment422Response:
      example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: user_ids"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: user_ids"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsRemoveUsersFromSegmentResponse:
      example:
        succeeded:
        - 962
        - 963
        - 964
        failed: []
      properties:
        succeeded:
          items:
            example: 962
            type: number
            x-konfig-original-example: 962
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegmentResponse-properties-succeeded-items
          type: array
        failed:
          items:
            type: string
          type: array
      type: object
      x-konfig-original-example:
        succeeded:
        - 962
        - 963
        - 964
        failed: []
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegmentResponse
      x-konfig-is-used-in-successful-response: true
    SegmentsRemoveUsersFromSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsRemoveUsersFromSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    SegmentsRemoveUsersFromSegment422Response:
      example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: user_ids"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: user_ids"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsGetListResponse:
      items:
        $ref: '#/components/schemas/Billboard'
      type: array
      x-konfig-is-used-in-successful-response: true
    BillboardsGetList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetList401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetList401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetList401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsCreateNewBillboardResponse:
      items:
        $ref: '#/components/schemas/Billboard'
      type: array
      x-konfig-is-used-in-successful-response: true
    BillboardsCreateNewBillboard401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsCreateNewBillboard422Response:
      example:
        error: "Validation failed: Placement area is not included in the list"
        status: 422
      properties:
        error:
          example: "Validation failed: Placement area is not included in the list"
          type: string
          x-konfig-original-example: "Validation failed: Placement area is not included\
            \ in the list"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "Validation failed: Placement area is not included in the list"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsGetByIdResponse:
      example:
        id: 3
        approved: false
        audience_segment_id: null
        body_markdown: Hello _hey_ Hey hey 2
        cached_tag_list: ""
        clicks_count: 0
        created_at: 2023-12-15T11:15:34.492+11:00
        creator_id: null
        custom_display_label: null
        display_to: all
        exclude_article_ids: ""
        impressions_count: 0
        name: Billboard 3
        organization_id: 6
        placement_area: sidebar_left
        priority: false
        processed_html: <p>Hello <em>hey</em> Hey hey 2</p>
        published: false
        render_mode: forem_markdown
        success_rate: 0
        template: authorship_box
        type_of: in_house
        updated_at: 2023-12-15T11:15:34.495+11:00
        weight: 1
        audience_segment_type: null
        tag_list: ""
        target_geolocations: []
      properties:
        id:
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-id
        approved:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-approved
        audience_segment_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-audience_segment_id
          example: null
        body_markdown:
          example: Hello _hey_ Hey hey 2
          type: string
          x-konfig-original-example: Hello _hey_ Hey hey 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-body_markdown
        cached_tag_list:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-cached_tag_list
        clicks_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-clicks_count
        created_at:
          example: 2023-12-15T11:15:34.492+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:34.492+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-created_at
        creator_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-creator_id
          example: null
        custom_display_label:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-custom_display_label
          example: null
        display_to:
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-display_to
        exclude_article_ids:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-exclude_article_ids
        impressions_count:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-impressions_count
        name:
          example: Billboard 3
          type: string
          x-konfig-original-example: Billboard 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-name
        organization_id:
          example: 6
          type: number
          x-konfig-original-example: 6
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-organization_id
        placement_area:
          example: sidebar_left
          type: string
          x-konfig-original-example: sidebar_left
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-placement_area
        priority:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-priority
        processed_html:
          example: <p>Hello <em>hey</em> Hey hey 2</p>
          type: string
          x-konfig-original-example: <p>Hello <em>hey</em> Hey hey 2</p>
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-processed_html
        published:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-published
        render_mode:
          example: forem_markdown
          type: string
          x-konfig-original-example: forem_markdown
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-render_mode
        success_rate:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-success_rate
        template:
          example: authorship_box
          type: string
          x-konfig-original-example: authorship_box
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-template
        type_of:
          example: in_house
          type: string
          x-konfig-original-example: in_house
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-type_of
        updated_at:
          example: 2023-12-15T11:15:34.495+11:00
          type: string
          x-konfig-original-example: 2023-12-15T11:15:34.495+11:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-updated_at
        weight:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-weight
        audience_segment_type:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-audience_segment_type
          example: null
        tag_list:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-tag_list
        target_geolocations:
          items:
            type: string
          type: array
      type: object
      x-konfig-original-example:
        id: 3
        approved: false
        body_markdown: Hello _hey_ Hey hey 2
        cached_tag_list: ""
        clicks_count: 0
        created_at: 2023-12-15T11:15:34.492+11:00
        display_to: all
        exclude_article_ids: ""
        impressions_count: 0
        name: Billboard 3
        organization_id: 6
        placement_area: sidebar_left
        priority: false
        processed_html: <p>Hello <em>hey</em> Hey hey 2</p>
        published: false
        render_mode: forem_markdown
        success_rate: 0
        template: authorship_box
        type_of: in_house
        updated_at: 2023-12-15T11:15:34.495+11:00
        weight: 1
        tag_list: ""
        target_geolocations: []
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetByIdResponse
      x-konfig-is-used-in-successful-response: true
    BillboardsGetById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsGetById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsUpdateByIdResponse:
      items:
        $ref: '#/components/schemas/Billboard'
      type: array
      x-konfig-is-used-in-successful-response: true
    BillboardsUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUpdateById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsUnpublishBillboardResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    BillboardsUnpublishBillboard404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    CommentsGetAllThreadedResponse:
      items:
        $ref: '#/components/schemas/Comment'
      type: array
      x-konfig-is-used-in-successful-response: true
    CommentsGetAllThreaded404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    CommentsGetThreadedCommentResponse:
      example:
        type_of: comment
        id_code: "3"
        created_at: 2023-12-15T00:15:35Z
        body_html: |+
          <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

        user:
          name: Kennith "Rodney" \:/ Baumbach
          username: username125
          twitter_username: twitter125
          github_username: github125
          user_id: 1005
          website_url: null
          profile_image: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          profile_image_90: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
        children: []
      properties:
        type_of:
          example: comment
          type: string
          x-konfig-original-example: comment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-type_of
        id_code:
          example: "3"
          type: string
          x-konfig-original-example: "3"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-id_code
        created_at:
          example: 2023-12-15T00:15:35Z
          type: string
          x-konfig-original-example: 2023-12-15T00:15:35Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-created_at
        body_html:
          example: |+
            <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

          type: string
          x-konfig-original-example: |+
            <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-body_html
        user:
          $ref: '#/components/schemas/CommentsGetThreadedCommentResponse_user'
        children:
          items:
            type: string
          type: array
      type: object
      x-konfig-original-example:
        type_of: comment
        id_code: "3"
        created_at: 2023-12-15T00:15:35Z
        body_html: |+
          <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

        user:
          name: Kennith "Rodney" \:/ Baumbach
          username: username125
          twitter_username: twitter125
          github_username: github125
          user_id: 1005
          profile_image: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          profile_image_90: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
        children: []
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse
      x-konfig-is-used-in-successful-response: true
    CommentsGetThreadedComment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    FollowedtagsGetTagListResponse:
      items:
        $ref: '#/components/schemas/FollowedTag'
      type: array
      x-konfig-is-used-in-successful-response: true
    FollowedtagsGetTagList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    FollowersGetListResponse:
      items:
        $ref: '#/components/schemas/FollowersGetListResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    FollowersGetList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowersGetList401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowersGetList401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-FollowersGetList401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsGetByUsernameResponse:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrganizationsGetByUsername404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsListUsersResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrganizationsListUsers404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListUsers404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListUsers404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListUsers404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsListArticlesResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrganizationsListArticles404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListArticles404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListArticles404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsListArticles404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsListOfDevResponse:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrganizationsCreateNewOrganizationResponse:
      example:
        summary: a newly created test org
        id: 23
        name: New Test Org
        profile_image: uploads/organization/profile_image/1/400x400.jpg
        slug: org10001
        tag_line: a test org's tagline
        url: https://testorg.io
      properties:
        summary:
          example: a newly created test org
          type: string
          x-konfig-original-example: a newly created test org
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-summary
        id:
          example: 23
          type: number
          x-konfig-original-example: 23
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-id
        name:
          example: New Test Org
          type: string
          x-konfig-original-example: New Test Org
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-name
        profile_image:
          example: uploads/organization/profile_image/1/400x400.jpg
          type: string
          x-konfig-original-example: uploads/organization/profile_image/1/400x400.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-profile_image
        slug:
          example: org10001
          type: string
          x-konfig-original-example: org10001
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-slug
        tag_line:
          example: a test org's tagline
          type: string
          x-konfig-original-example: a test org's tagline
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-tag_line
        url:
          example: https://testorg.io
          type: string
          x-konfig-original-example: https://testorg.io
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-url
      type: object
      x-konfig-original-example:
        summary: a newly created test org
        id: 23
        name: New Test Org
        profile_image: uploads/organization/profile_image/1/400x400.jpg
        slug: org10001
        tag_line: a test org's tagline
        url: https://testorg.io
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse
      x-konfig-is-used-in-successful-response: true
    OrganizationsCreateNewOrganization422Response:
      example:
        error: "Validation failed: Name can't be blank, Profile image can't be blank,\
          \ Slug can't be blank"
        status: 422
      properties:
        error:
          example: "Validation failed: Name can't be blank, Profile image can't be\
            \ blank, Slug can't be blank"
          type: string
          x-konfig-original-example: "Validation failed: Name can't be blank, Profile\
            \ image can't be blank, Slug can't be blank"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "Validation failed: Name can't be blank, Profile image can't be blank,\
          \ Slug can't be blank"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsDeleteByIdResponse:
      example:
        message: deletion scheduled for organization with ID 28
        status: 200
      properties:
        message:
          example: deletion scheduled for organization with ID 28
          type: string
          x-konfig-original-example: deletion scheduled for organization with ID 28
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse-properties-message
        status:
          example: 200
          type: number
          x-konfig-original-example: 200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse-properties-status
      type: object
      x-konfig-original-example:
        message: deletion scheduled for organization with ID 28
        status: 200
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse
      x-konfig-is-used-in-successful-response: true
    OrganizationsDeleteById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsGetByIdResponse:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrganizationsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsGetById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsUpdateByIdResponse:
      example:
        summary: An updated summary for the organization.
        id: 24
        name: "Reinger, Gleichner and Rogahn"
        profile_image: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
        slug: org23
        tag_line: null
        url: http://kertzmann.io/clora.mcglynn
      properties:
        summary:
          example: An updated summary for the organization.
          type: string
          x-konfig-original-example: An updated summary for the organization.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-summary
        id:
          example: 24
          type: number
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-id
        name:
          example: "Reinger, Gleichner and Rogahn"
          type: string
          x-konfig-original-example: "Reinger, Gleichner and Rogahn"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-name
        profile_image:
          example: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
          type: string
          x-konfig-original-example: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-profile_image
        slug:
          example: org23
          type: string
          x-konfig-original-example: org23
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-slug
        tag_line:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-tag_line
          example: null
        url:
          example: http://kertzmann.io/clora.mcglynn
          type: string
          x-konfig-original-example: http://kertzmann.io/clora.mcglynn
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-url
      type: object
      x-konfig-original-example:
        summary: An updated summary for the organization.
        id: 24
        name: "Reinger, Gleichner and Rogahn"
        profile_image: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
        slug: org23
        url: http://kertzmann.io/clora.mcglynn
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse
      x-konfig-is-used-in-successful-response: true
    OrganizationsUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    OrganizationsUpdateById422Response:
      example:
        error: "param is missing or the value is empty: organization"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: organization"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: organization"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: organization"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesListAllDetailsResponse:
      items:
        $ref: '#/components/schemas/Page'
      type: array
      x-konfig-is-used-in-successful-response: true
    PagesCreateNewPageResponse:
      example:
        title: Example Page
        description: a new page
        id: 3
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        processed_html: |+
          <h1>
            <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
            </a>
            Hi, this is a New Page
          </h1>

          <p>Yep, it's an a new page</p>

        social_image:
          url: null
        template: contained
      properties:
        title:
          example: Example Page
          type: string
          x-konfig-original-example: Example Page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-title
        description:
          example: a new page
          type: string
          x-konfig-original-example: a new page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-description
        id:
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-id
        slug:
          example: example1
          type: string
          x-konfig-original-example: example1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-slug
        is_top_level_path:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-is_top_level_path
        landing_page:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-landing_page
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_html
          example: null
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_json
          example: null
        body_markdown:
          example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          type: string
          x-konfig-original-example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_markdown
        processed_html:
          example: |+
            <h1>
              <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
              </a>
              Hi, this is a New Page
            </h1>

            <p>Yep, it's an a new page</p>

          type: string
          x-konfig-original-example: |+
            <h1>
              <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
              </a>
              Hi, this is a New Page
            </h1>

            <p>Yep, it's an a new page</p>

          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-processed_html
        social_image:
          $ref: '#/components/schemas/PagesCreateNewPageResponse_social_image'
        template:
          example: contained
          type: string
          x-konfig-original-example: contained
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-template
      type: object
      x-konfig-original-example:
        title: Example Page
        description: a new page
        id: 3
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        processed_html: |+
          <h1>
            <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
            </a>
            Hi, this is a New Page
          </h1>

          <p>Yep, it's an a new page</p>

        social_image: {}
        template: contained
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse
      x-konfig-is-used-in-successful-response: true
    PagesCreateNewPage401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesCreateNewPage422Response:
      example:
        title: Example Page
        description: a new page
        id: null
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        processed_html: null
        social_image:
          url: null
        template: moon
      properties:
        title:
          example: Example Page
          type: string
          x-konfig-original-example: Example Page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-title
        description:
          example: a new page
          type: string
          x-konfig-original-example: a new page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-description
        id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-id
          example: null
        slug:
          example: example1
          type: string
          x-konfig-original-example: example1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-slug
        is_top_level_path:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-is_top_level_path
        landing_page:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-landing_page
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_html
          example: null
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_json
          example: null
        body_markdown:
          example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          type: string
          x-konfig-original-example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_markdown
        processed_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-processed_html
          example: null
        social_image:
          properties:
            url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-social_image-properties-url
              example: null
          type: object
        template:
          example: moon
          type: string
          x-konfig-original-example: moon
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-template
      type: object
      x-konfig-original-example:
        title: Example Page
        description: a new page
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        social_image: {}
        template: moon
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPage422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesRemovePageByIdResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesRemovePageById422Response:
      example:
        doubled_module:
          const_name: Page
          object: Page
        __expired: false
        name: null
        __sending_message: null
      properties:
        doubled_module:
          properties:
            const_name:
              example: Page
              type: string
              x-konfig-original-example: Page
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-doubled_module-properties-const_name
            object:
              example: Page
              type: string
              x-konfig-original-example: Page
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-doubled_module-properties-object
          type: object
        __expired:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-__expired
        name:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-name
          example: null
        __sending_message:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-__sending_message
          example: null
      type: object
      x-konfig-original-example:
        doubled_module:
          const_name: Page
          object: Page
        __expired: false
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesRemovePageById422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesUpdatePageDetailsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PagesUpdatePageDetails422Response:
      example:
        title: Behold the Man
        description: Blanditiis sunt vel inventore.
        id: 9
        slug: kidnap-outside
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: Voluptatum fugit quisquam occaecati.
        processed_html: |+
          <p>Voluptatem beatae provident sed.</p>

        social_image:
          url: null
        template: moon
      properties:
        title:
          example: Behold the Man
          type: string
          x-konfig-original-example: Behold the Man
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-title
        description:
          example: Blanditiis sunt vel inventore.
          type: string
          x-konfig-original-example: Blanditiis sunt vel inventore.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-description
        id:
          example: 9
          type: number
          x-konfig-original-example: 9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-id
        slug:
          example: kidnap-outside
          type: string
          x-konfig-original-example: kidnap-outside
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-slug
        is_top_level_path:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-is_top_level_path
        landing_page:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-landing_page
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_html
          example: null
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_json
          example: null
        body_markdown:
          example: Voluptatum fugit quisquam occaecati.
          type: string
          x-konfig-original-example: Voluptatum fugit quisquam occaecati.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_markdown
        processed_html:
          example: |+
            <p>Voluptatem beatae provident sed.</p>

          type: string
          x-konfig-original-example: |+
            <p>Voluptatem beatae provident sed.</p>

          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-processed_html
        social_image:
          properties:
            url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-social_image-properties-url
              example: null
          type: object
        template:
          example: moon
          type: string
          x-konfig-original-example: moon
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-template
      type: object
      x-konfig-original-example:
        title: Behold the Man
        description: Blanditiis sunt vel inventore.
        id: 9
        slug: kidnap-outside
        is_top_level_path: false
        landing_page: false
        body_markdown: Voluptatum fugit quisquam occaecati.
        processed_html: |+
          <p>Voluptatem beatae provident sed.</p>

        social_image: {}
        template: moon
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    PodcastepisodesListByDescendingPublicationDateResponse:
      items:
        $ref: '#/components/schemas/PodcastEpisodeIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    PodcastepisodesListByDescendingPublicationDate404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ProfileImagesGetByUsernameResponse:
      items:
        $ref: '#/components/schemas/ProfileImage'
      type: array
      x-konfig-is-used-in-successful-response: true
    ProfileImagesGetByUsername404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ReactionsToggleUserReactionResponse:
      example:
        result: create
        category: like
        id: 1
        reactable_id: 29
        reactable_type: Article
      properties:
        result:
          example: create
          type: string
          x-konfig-original-example: create
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-result
        category:
          example: like
          type: string
          x-konfig-original-example: like
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-category
        id:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-id
        reactable_id:
          example: 29
          type: number
          x-konfig-original-example: 29
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-reactable_id
        reactable_type:
          example: Article
          type: string
          x-konfig-original-example: Article
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-reactable_type
      type: object
      x-konfig-original-example:
        result: create
        category: like
        id: 1
        reactable_id: 29
        reactable_type: Article
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse
      x-konfig-is-used-in-successful-response: true
    ReactionsToggleUserReaction401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ReactionsCreateReactionResponse:
      example:
        result: none
        category: like
        id: 3
        reactable_id: 31
        reactable_type: Article
      properties:
        result:
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-result
        category:
          example: like
          type: string
          x-konfig-original-example: like
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-category
        id:
          example: 3
          type: number
          x-konfig-original-example: 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-id
        reactable_id:
          example: 31
          type: number
          x-konfig-original-example: 31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-reactable_id
        reactable_type:
          example: Article
          type: string
          x-konfig-original-example: Article
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-reactable_type
      type: object
      x-konfig-original-example:
        result: none
        category: like
        id: 3
        reactable_id: 31
        reactable_type: Article
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse
      x-konfig-is-used-in-successful-response: true
    ReactionsCreateReaction401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ReadinglistGetUserReadinglistResponse:
      items:
        $ref: '#/components/schemas/ArticleIndex'
      type: array
      x-konfig-is-used-in-successful-response: true
    ReadinglistGetUserReadinglist401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    TagsListByPopularityResponse:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
      x-konfig-is-used-in-successful-response: true
    UsersSuspendUserResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUserResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUserResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUserResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersSuspendUser404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUser404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUser404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendUser404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveLimitsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveLimits404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimits404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimits404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveLimits404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAddLimitedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAddLimitedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveSpamRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveSpamRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAssignSpamRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAssignSpamRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveTrustedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersRemoveTrustedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAddTrustedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersAddTrustedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersGetInformationResponse:
      items:
        $ref: '#/components/schemas/MyUser'
      type: array
      x-konfig-is-used-in-successful-response: true
    UsersGetInformation401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersGetInformation401Response-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersGetInformation401Response-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersGetInformation401Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersGetByIdOrUsernameResponse:
      items:
        $ref: '#/components/schemas/ExtendedUser'
      type: array
      x-konfig-is-used-in-successful-response: true
    UsersUnpublishUserArticlesAndCommentsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersUnpublishUserArticlesAndComments404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
          x-konfig-original-example: not found
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response-properties-error
        status:
          example: 404
          type: number
          x-konfig-original-example: 404
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response-properties-status
      type: object
      x-konfig-original-example:
        error: not found
        status: 404
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersInviteUserResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
          x-konfig-original-example: unauthorized
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUserResponse-properties-error
        status:
          example: 401
          type: number
          x-konfig-original-example: 401
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUserResponse-properties-status
      type: object
      x-konfig-original-example:
        error: unauthorized
        status: 401
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUserResponse
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    UsersInviteUser422Response:
      example:
        error: "param is missing or the value is empty: email"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: email"
          type: string
          x-konfig-original-example: "param is missing or the value is empty: email"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUser422Response-properties-error
        status:
          example: 422
          type: number
          x-konfig-original-example: 422
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUser422Response-properties-status
      type: object
      x-konfig-original-example:
        error: "param is missing or the value is empty: email"
        status: 422
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersInviteUser422Response
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    VideosListByPopularityResponse:
      items:
        $ref: '#/components/schemas/VideoArticle'
      type: array
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-components-parameters-pageParam-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-perPageParam10to1000-schema:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-perPageParam24to1000-schema:
      example: 24
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-perPageParam30to1000-schema:
      example: 30
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-perPageParam30to100-schema:
      example: 30
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-perPageParam80to1000-schema:
      example: 80
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Article-properties-article-properties-published:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Page-properties-template:
      example: contained
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Billboard-properties-display_to:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Billboard-properties-type_of:
      example: in_house
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Segment-properties-type_of:
      example: manual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageRequest-properties-template:
      example: contained
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse:
      example:
        tags: []
        title: New article
        description: New post example
        type_of: article
        id: 2
        readable_publish_date: Dec 15
        slug: new-article-2io1
        path: /username2/new-article-2io1
        url: http://forem.test/username2/new-article-2io1
        comments_count: 0
        public_reactions_count: 0
        collection_id: 1
        published_timestamp: 2023-12-15T00:15:27Z
        positive_reactions_count: 0
        cover_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        social_image: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
        canonical_url: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
        created_at: 2023-12-15T00:15:27Z
        edited_at: null
        crossposted_at: null
        published_at: 2023-12-15T00:15:27Z
        last_comment_at: 2023-12-15T00:15:27Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Carmen "Andre" \:/ Rodriguez
          username: username2
          twitter_username: twitter2
          github_username: github2
          user_id: 882
          website_url: null
          profile_image: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          profile_image_90: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
      properties:
        tags:
          items:
            type: string
          type: array
        title:
          example: New article
          type: string
        description:
          example: New post example
          type: string
        type_of:
          example: article
          type: string
        id:
          example: 2
          type: number
        readable_publish_date:
          example: Dec 15
          type: string
        slug:
          example: new-article-2io1
          type: string
        path:
          example: /username2/new-article-2io1
          type: string
        url:
          example: http://forem.test/username2/new-article-2io1
          type: string
        comments_count:
          example: 0
          type: number
        public_reactions_count:
          example: 0
          type: number
        collection_id:
          example: 1
          type: number
        published_timestamp:
          example: 2023-12-15T00:15:27Z
          type: string
        positive_reactions_count:
          example: 0
          type: number
        cover_image:
          example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          type: string
        social_image:
          example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
          type: string
        canonical_url:
          example: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
          type: string
        created_at:
          example: 2023-12-15T00:15:27Z
          type: string
        edited_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        crossposted_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        published_at:
          example: 2023-12-15T00:15:27Z
          type: string
        last_comment_at:
          example: 2023-12-15T00:15:27Z
          type: string
        reading_time_minutes:
          example: 1
          type: number
        tag_list:
          example: ""
          type: string
        body_html:
          example: |+
            <p><strong>New</strong> body for the article</p>

          type: string
        body_markdown:
          example: '**New** body for the article'
          type: string
        user:
          properties:
            name:
              example: Carmen "Andre" \:/ Rodriguez
              type: string
            username:
              example: username2
              type: string
            twitter_username:
              example: twitter2
              type: string
            github_username:
              example: github2
              type: string
            user_id:
              example: 882
              type: number
            website_url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            profile_image:
              example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
              type: string
            profile_image_90:
              example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-title:
      example: New article
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-description:
      example: New post example
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-type_of:
      example: article
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-id:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-readable_publish_date:
      example: Dec 15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-slug:
      example: new-article-2io1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-path:
      example: /username2/new-article-2io1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-url:
      example: http://forem.test/username2/new-article-2io1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-comments_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-public_reactions_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-collection_id:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-published_timestamp:
      example: 2023-12-15T00:15:27Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-positive_reactions_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-cover_image:
      example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-social_image:
      example: https://thepracticaldev.s3.amazonaws.com/i/5wfo25724gzgk5e5j50g.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-canonical_url:
      example: https://dev.to/fdocr/headless-chrome-dual-mode-tests-for-ruby-on-rails-4p6g
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-created_at:
      example: 2023-12-15T00:15:27Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-edited_at:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-crossposted_at:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-published_at:
      example: 2023-12-15T00:15:27Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-last_comment_at:
      example: 2023-12-15T00:15:27Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-reading_time_minutes:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-tag_list:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-body_html:
      example: |+
        <p><strong>New</strong> body for the article</p>

      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-body_markdown:
      example: '**New** body for the article'
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-name:
      example: Carmen "Andre" \:/ Rodriguez
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-username:
      example: username2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-twitter_username:
      example: twitter2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-github_username:
      example: github2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-user_id:
      example: 882
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-website_url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-profile_image:
      example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-profile_image_90:
      example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response:
      example:
        error: "param is missing or the value is empty: article"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: article"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response-properties-error:
      example: "param is missing or the value is empty: article"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesCreateNewArticle422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse:
      example:
        tags: []
        title: Recalled to Life9
        description: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
          pop-up godard put a...
        type_of: article
        id: 10
        readable_publish_date: Dec 15
        slug: recalled-to-life9-1990
        path: /username11/recalled-to-life9-1990
        url: http://forem.test/username11/recalled-to-life9-1990
        comments_count: 0
        public_reactions_count: 0
        collection_id: null
        published_timestamp: 2023-12-15T00:15:28Z
        positive_reactions_count: 0
        cover_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        social_image: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
        canonical_url: http://forem.test/username11/recalled-to-life9-1990
        created_at: 2023-12-15T00:15:28Z
        edited_at: 2023-12-15T00:15:28Z
        crossposted_at: null
        published_at: 2023-12-15T00:15:28Z
        last_comment_at: 2023-12-15T00:15:28Z
        reading_time_minutes: 1
        tag_list: ""
        body_html: |+
          <p><strong>New</strong> body for the article</p>

        body_markdown: '**New** body for the article'
        user:
          name: Danilo "Morton" \:/ Douglas
          username: username11
          twitter_username: twitter11
          github_username: github11
          user_id: 891
          website_url: null
          profile_image: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          profile_image_90: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
      properties:
        tags:
          items:
            type: string
          type: array
        title:
          example: Recalled to Life9
          type: string
        description:
          example: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
            pop-up godard put a...
          type: string
        type_of:
          example: article
          type: string
        id:
          example: 10
          type: number
        readable_publish_date:
          example: Dec 15
          type: string
        slug:
          example: recalled-to-life9-1990
          type: string
        path:
          example: /username11/recalled-to-life9-1990
          type: string
        url:
          example: http://forem.test/username11/recalled-to-life9-1990
          type: string
        comments_count:
          example: 0
          type: number
        public_reactions_count:
          example: 0
          type: number
        collection_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        published_timestamp:
          example: 2023-12-15T00:15:28Z
          type: string
        positive_reactions_count:
          example: 0
          type: number
        cover_image:
          example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          type: string
        social_image:
          example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
          type: string
        canonical_url:
          example: http://forem.test/username11/recalled-to-life9-1990
          type: string
        created_at:
          example: 2023-12-15T00:15:28Z
          type: string
        edited_at:
          example: 2023-12-15T00:15:28Z
          type: string
        crossposted_at:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        published_at:
          example: 2023-12-15T00:15:28Z
          type: string
        last_comment_at:
          example: 2023-12-15T00:15:28Z
          type: string
        reading_time_minutes:
          example: 1
          type: number
        tag_list:
          example: ""
          type: string
        body_html:
          example: |+
            <p><strong>New</strong> body for the article</p>

          type: string
        body_markdown:
          example: '**New** body for the article'
          type: string
        user:
          properties:
            name:
              example: Danilo "Morton" \:/ Douglas
              type: string
            username:
              example: username11
              type: string
            twitter_username:
              example: twitter11
              type: string
            github_username:
              example: github11
              type: string
            user_id:
              example: 891
              type: number
            website_url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            profile_image:
              example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
              type: string
            profile_image_90:
              example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-title:
      example: Recalled to Life9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-description:
      example: Messenger bag kickstarter fingerstache. Green juice hammock taxidermy.  Gastropub
        pop-up godard put a...
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-type_of:
      example: article
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-id:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-readable_publish_date:
      example: Dec 15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-slug:
      example: recalled-to-life9-1990
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-path:
      example: /username11/recalled-to-life9-1990
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-url:
      example: http://forem.test/username11/recalled-to-life9-1990
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-comments_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-public_reactions_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-collection_id:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-published_timestamp:
      example: 2023-12-15T00:15:28Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-positive_reactions_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-cover_image:
      example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-social_image:
      example: http://forem.test/assets/21-8c16e6ef44da175a1e51f1ba9d0cb55af8a920db6aacbf1e4b7a055afc1b3d30.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-canonical_url:
      example: http://forem.test/username11/recalled-to-life9-1990
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-created_at:
      example: 2023-12-15T00:15:28Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-edited_at:
      example: 2023-12-15T00:15:28Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-crossposted_at:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-published_at:
      example: 2023-12-15T00:15:28Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-last_comment_at:
      example: 2023-12-15T00:15:28Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-reading_time_minutes:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-tag_list:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-body_html:
      example: |+
        <p><strong>New</strong> body for the article</p>

      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-body_markdown:
      example: '**New** body for the article'
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-name:
      example: Danilo "Morton" \:/ Douglas
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-username:
      example: username11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-twitter_username:
      example: twitter11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-github_username:
      example: github11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-user_id:
      example: 891
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-website_url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-profile_image:
      example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-profile_image_90:
      example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById422Response:
      example:
        error: "param is missing or the value is empty: article"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: article"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById422Response-properties-error:
      example: "param is missing or the value is empty: article"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUpdateById422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetByPath404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetByPath404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetByPath404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetPublishedList401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetUnpublishedList401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesGetAllUserArticles401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishByIdResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ArticlesUnpublishById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsListAudienceSegments401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse:
      example:
        id: 3
        created_at: 2023-12-15T11:15:30.723+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:30.723+11:00
      properties:
        id:
          example: 3
          type: number
        created_at:
          example: 2023-12-15T11:15:30.723+11:00
          type: string
        type_of:
          example: manual
          type: string
        updated_at:
          example: 2023-12-15T11:15:30.723+11:00
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-created_at:
      example: 2023-12-15T11:15:30.723+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-type_of:
      example: manual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegmentResponse-properties-updated_at:
      example: 2023-12-15T11:15:30.723+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsCreateManuallyManagedSegment401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse:
      example:
        id: 8
        created_at: 2023-12-15T11:15:31.351+11:00
        type_of: manual
        updated_at: 2023-12-15T11:15:31.351+11:00
      properties:
        id:
          example: 8
          type: number
        created_at:
          example: 2023-12-15T11:15:31.351+11:00
          type: string
        type_of:
          example: manual
          type: string
        updated_at:
          example: 2023-12-15T11:15:31.351+11:00
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-id:
      example: 8
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-created_at:
      example: 2023-12-15T11:15:31.351+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-type_of:
      example: manual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegmentResponse-properties-updated_at:
      example: 2023-12-15T11:15:31.351+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment409Response:
      example:
        error: Segments cannot be deleted while in use by any billboards
      properties:
        error:
          example: Segments cannot be deleted while in use by any billboards
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsDeleteManuallyManagedSegment409Response-properties-error:
      example: Segments cannot be deleted while in use by any billboards
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsGetUserListInSegment404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegmentResponse:
      example:
        succeeded:
        - 943
        - 944
        - 945
        failed: []
      properties:
        succeeded:
          items:
            example: 943
            type: number
          type: array
        failed:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegmentResponse-properties-succeeded-items:
      example: 943
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response:
      example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: user_ids"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response-properties-error:
      example: "param is missing or the value is empty: user_ids"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsAddUsersToSegment422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegmentResponse:
      example:
        succeeded:
        - 962
        - 963
        - 964
        failed: []
      properties:
        succeeded:
          items:
            example: 962
            type: number
          type: array
        failed:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegmentResponse-properties-succeeded-items:
      example: 962
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response:
      example:
        error: "param is missing or the value is empty: user_ids"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: user_ids"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response-properties-error:
      example: "param is missing or the value is empty: user_ids"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SegmentsRemoveUsersFromSegment422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetList401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetList401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response:
      example:
        error: "Validation failed: Placement area is not included in the list"
        status: 422
      properties:
        error:
          example: "Validation failed: Placement area is not included in the list"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response-properties-error:
      example: "Validation failed: Placement area is not included in the list"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsCreateNewBillboard422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse:
      example:
        id: 3
        approved: false
        audience_segment_id: null
        body_markdown: Hello _hey_ Hey hey 2
        cached_tag_list: ""
        clicks_count: 0
        created_at: 2023-12-15T11:15:34.492+11:00
        creator_id: null
        custom_display_label: null
        display_to: all
        exclude_article_ids: ""
        impressions_count: 0
        name: Billboard 3
        organization_id: 6
        placement_area: sidebar_left
        priority: false
        processed_html: <p>Hello <em>hey</em> Hey hey 2</p>
        published: false
        render_mode: forem_markdown
        success_rate: 0
        template: authorship_box
        type_of: in_house
        updated_at: 2023-12-15T11:15:34.495+11:00
        weight: 1
        audience_segment_type: null
        tag_list: ""
        target_geolocations: []
      properties:
        id:
          example: 3
          type: number
        approved:
          example: false
          type: boolean
        audience_segment_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_markdown:
          example: Hello _hey_ Hey hey 2
          type: string
        cached_tag_list:
          example: ""
          type: string
        clicks_count:
          example: 0
          type: number
        created_at:
          example: 2023-12-15T11:15:34.492+11:00
          type: string
        creator_id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        custom_display_label:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        display_to:
          example: all
          type: string
        exclude_article_ids:
          example: ""
          type: string
        impressions_count:
          example: 0
          type: number
        name:
          example: Billboard 3
          type: string
        organization_id:
          example: 6
          type: number
        placement_area:
          example: sidebar_left
          type: string
        priority:
          example: false
          type: boolean
        processed_html:
          example: <p>Hello <em>hey</em> Hey hey 2</p>
          type: string
        published:
          example: false
          type: boolean
        render_mode:
          example: forem_markdown
          type: string
        success_rate:
          example: 0
          type: number
        template:
          example: authorship_box
          type: string
        type_of:
          example: in_house
          type: string
        updated_at:
          example: 2023-12-15T11:15:34.495+11:00
          type: string
        weight:
          example: 1
          type: number
        audience_segment_type:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        tag_list:
          example: ""
          type: string
        target_geolocations:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-approved:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-audience_segment_id:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-body_markdown:
      example: Hello _hey_ Hey hey 2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-cached_tag_list:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-clicks_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-created_at:
      example: 2023-12-15T11:15:34.492+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-creator_id:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-custom_display_label:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-display_to:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-exclude_article_ids:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-impressions_count:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-name:
      example: Billboard 3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-organization_id:
      example: 6
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-placement_area:
      example: sidebar_left
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-priority:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-processed_html:
      example: <p>Hello <em>hey</em> Hey hey 2</p>
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-published:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-render_mode:
      example: forem_markdown
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-success_rate:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-template:
      example: authorship_box
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-type_of:
      example: in_house
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-updated_at:
      example: 2023-12-15T11:15:34.495+11:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-weight:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-audience_segment_type:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetByIdResponse-properties-tag_list:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsGetById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUpdateById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboardResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BillboardsUnpublishBillboard404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetAllThreaded404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse:
      example:
        type_of: comment
        id_code: "3"
        created_at: 2023-12-15T00:15:35Z
        body_html: |+
          <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

        user:
          name: Kennith "Rodney" \:/ Baumbach
          username: username125
          twitter_username: twitter125
          github_username: github125
          user_id: 1005
          website_url: null
          profile_image: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          profile_image_90: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
        children: []
      properties:
        type_of:
          example: comment
          type: string
        id_code:
          example: "3"
          type: string
        created_at:
          example: 2023-12-15T00:15:35Z
          type: string
        body_html:
          example: |+
            <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

          type: string
        user:
          properties:
            name:
              example: Kennith "Rodney" \:/ Baumbach
              type: string
            username:
              example: username125
              type: string
            twitter_username:
              example: twitter125
              type: string
            github_username:
              example: github125
              type: string
            user_id:
              example: 1005
              type: number
            website_url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
            profile_image:
              example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
              type: string
            profile_image_90:
              example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
              type: string
          type: object
        children:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-type_of:
      example: comment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-id_code:
      example: "3"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-created_at:
      example: 2023-12-15T00:15:35Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-body_html:
      example: |+
        <p>Food truck beard typewriter locavore. Lomo bushwick cardigan post-ironic vhs. Vinegar gluten-free swag tumblr helvetica listicle xoxo.</p>

      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-name:
      example: Kennith "Rodney" \:/ Baumbach
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-username:
      example: username125
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-twitter_username:
      example: twitter125
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-github_username:
      example: github125
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-user_id:
      example: 1005
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-website_url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-profile_image:
      example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-profile_image_90:
      example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CommentsGetThreadedComment404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowedtagsGetTagList401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowersGetList401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowersGetList401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FollowersGetList401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetByUsername404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListUsers404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListUsers404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListUsers404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListArticles404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListArticles404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsListArticles404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse:
      example:
        summary: a newly created test org
        id: 23
        name: New Test Org
        profile_image: uploads/organization/profile_image/1/400x400.jpg
        slug: org10001
        tag_line: a test org's tagline
        url: https://testorg.io
      properties:
        summary:
          example: a newly created test org
          type: string
        id:
          example: 23
          type: number
        name:
          example: New Test Org
          type: string
        profile_image:
          example: uploads/organization/profile_image/1/400x400.jpg
          type: string
        slug:
          example: org10001
          type: string
        tag_line:
          example: a test org's tagline
          type: string
        url:
          example: https://testorg.io
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-summary:
      example: a newly created test org
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-id:
      example: 23
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-name:
      example: New Test Org
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-profile_image:
      example: uploads/organization/profile_image/1/400x400.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-slug:
      example: org10001
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-tag_line:
      example: a test org's tagline
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganizationResponse-properties-url:
      example: https://testorg.io
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response:
      example:
        error: "Validation failed: Name can't be blank, Profile image can't be blank,\
          \ Slug can't be blank"
        status: 422
      properties:
        error:
          example: "Validation failed: Name can't be blank, Profile image can't be\
            \ blank, Slug can't be blank"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response-properties-error:
      example: "Validation failed: Name can't be blank, Profile image can't be blank,\
        \ Slug can't be blank"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsCreateNewOrganization422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse:
      example:
        message: deletion scheduled for organization with ID 28
        status: 200
      properties:
        message:
          example: deletion scheduled for organization with ID 28
          type: string
        status:
          example: 200
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse-properties-message:
      example: deletion scheduled for organization with ID 28
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteByIdResponse-properties-status:
      example: 200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsDeleteById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsGetById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse:
      example:
        summary: An updated summary for the organization.
        id: 24
        name: "Reinger, Gleichner and Rogahn"
        profile_image: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
        slug: org23
        tag_line: null
        url: http://kertzmann.io/clora.mcglynn
      properties:
        summary:
          example: An updated summary for the organization.
          type: string
        id:
          example: 24
          type: number
        name:
          example: "Reinger, Gleichner and Rogahn"
          type: string
        profile_image:
          example: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
          type: string
        slug:
          example: org23
          type: string
        tag_line:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        url:
          example: http://kertzmann.io/clora.mcglynn
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-summary:
      example: An updated summary for the organization.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-id:
      example: 24
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-name:
      example: "Reinger, Gleichner and Rogahn"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-profile_image:
      example: /uploads/organization/profile_image/24/1b9f0d37-acb7-4b80-b950-d621f5c5463d.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-slug:
      example: org23
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-tag_line:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateByIdResponse-properties-url:
      example: http://kertzmann.io/clora.mcglynn
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response:
      example:
        error: "param is missing or the value is empty: organization"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: organization"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response-properties-error:
      example: "param is missing or the value is empty: organization"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrganizationsUpdateById422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse:
      example:
        title: Example Page
        description: a new page
        id: 3
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        processed_html: |+
          <h1>
            <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
            </a>
            Hi, this is a New Page
          </h1>

          <p>Yep, it's an a new page</p>

        social_image:
          url: null
        template: contained
      properties:
        title:
          example: Example Page
          type: string
        description:
          example: a new page
          type: string
        id:
          example: 3
          type: number
        slug:
          example: example1
          type: string
        is_top_level_path:
          example: false
          type: boolean
        landing_page:
          example: false
          type: boolean
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_markdown:
          example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          type: string
        processed_html:
          example: |+
            <h1>
              <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
              </a>
              Hi, this is a New Page
            </h1>

            <p>Yep, it's an a new page</p>

          type: string
        social_image:
          properties:
            url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
          type: object
        template:
          example: contained
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-title:
      example: Example Page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-description:
      example: a new page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-slug:
      example: example1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-is_top_level_path:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-landing_page:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_html:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_json:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-body_markdown:
      example: |-
        # Hi, this is a New Page
        Yep, it's an a new page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-processed_html:
      example: |+
        <h1>
          <a name="hi-this-is-a-new-page" href="#hi-this-is-a-new-page">
          </a>
          Hi, this is a New Page
        </h1>

        <p>Yep, it's an a new page</p>

      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-social_image-properties-url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-template:
      example: contained
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response:
      example:
        title: Example Page
        description: a new page
        id: null
        slug: example1
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: |-
          # Hi, this is a New Page
          Yep, it's an a new page
        processed_html: null
        social_image:
          url: null
        template: moon
      properties:
        title:
          example: Example Page
          type: string
        description:
          example: a new page
          type: string
        id:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        slug:
          example: example1
          type: string
        is_top_level_path:
          example: false
          type: boolean
        landing_page:
          example: false
          type: boolean
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_markdown:
          example: |-
            # Hi, this is a New Page
            Yep, it's an a new page
          type: string
        processed_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        social_image:
          properties:
            url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
          type: object
        template:
          example: moon
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-title:
      example: Example Page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-description:
      example: a new page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-id:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-slug:
      example: example1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-is_top_level_path:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-landing_page:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_html:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_json:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-body_markdown:
      example: |-
        # Hi, this is a New Page
        Yep, it's an a new page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-processed_html:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-social_image-properties-url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesCreateNewPage422Response-properties-template:
      example: moon
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageByIdResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response:
      example:
        doubled_module:
          const_name: Page
          object: Page
        __expired: false
        name: null
        __sending_message: null
      properties:
        doubled_module:
          properties:
            const_name:
              example: Page
              type: string
            object:
              example: Page
              type: string
          type: object
        __expired:
          example: false
          type: boolean
        name:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        __sending_message:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-doubled_module-properties-const_name:
      example: Page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-doubled_module-properties-object:
      example: Page
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-__expired:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-name:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesRemovePageById422Response-properties-__sending_message:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetailsResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response:
      example:
        title: Behold the Man
        description: Blanditiis sunt vel inventore.
        id: 9
        slug: kidnap-outside
        is_top_level_path: false
        landing_page: false
        body_html: null
        body_json: null
        body_markdown: Voluptatum fugit quisquam occaecati.
        processed_html: |+
          <p>Voluptatem beatae provident sed.</p>

        social_image:
          url: null
        template: moon
      properties:
        title:
          example: Behold the Man
          type: string
        description:
          example: Blanditiis sunt vel inventore.
          type: string
        id:
          example: 9
          type: number
        slug:
          example: kidnap-outside
          type: string
        is_top_level_path:
          example: false
          type: boolean
        landing_page:
          example: false
          type: boolean
        body_html:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_json:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        body_markdown:
          example: Voluptatum fugit quisquam occaecati.
          type: string
        processed_html:
          example: |+
            <p>Voluptatem beatae provident sed.</p>

          type: string
        social_image:
          properties:
            url:
              nullable: true
              type: string
              x-konfig-null-placeholder: true
          type: object
        template:
          example: moon
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-title:
      example: Behold the Man
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-description:
      example: Blanditiis sunt vel inventore.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-id:
      example: 9
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-slug:
      example: kidnap-outside
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-is_top_level_path:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-landing_page:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_html:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_json:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-body_markdown:
      example: Voluptatum fugit quisquam occaecati.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-processed_html:
      example: |+
        <p>Voluptatem beatae provident sed.</p>

      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-social_image-properties-url:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PagesUpdatePageDetails422Response-properties-template:
      example: moon
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PodcastepisodesListByDescendingPublicationDate404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ProfileImagesGetByUsername404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse:
      example:
        result: create
        category: like
        id: 1
        reactable_id: 29
        reactable_type: Article
      properties:
        result:
          example: create
          type: string
        category:
          example: like
          type: string
        id:
          example: 1
          type: number
        reactable_id:
          example: 29
          type: number
        reactable_type:
          example: Article
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-result:
      example: create
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-category:
      example: like
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-id:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-reactable_id:
      example: 29
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReactionResponse-properties-reactable_type:
      example: Article
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsToggleUserReaction401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse:
      example:
        result: none
        category: like
        id: 3
        reactable_id: 31
        reactable_type: Article
      properties:
        result:
          example: none
          type: string
        category:
          example: like
          type: string
        id:
          example: 3
          type: number
        reactable_id:
          example: 31
          type: number
        reactable_type:
          example: Article
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-result:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-category:
      example: like
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-id:
      example: 3
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-reactable_id:
      example: 31
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReactionResponse-properties-reactable_type:
      example: Article
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReactionsCreateReaction401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReadinglistGetUserReadinglist401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUserResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUserResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUserResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUser404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUser404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendUser404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimitsResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimits404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimits404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveLimits404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRoleResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddLimitedRole404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRoleResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveSpamRole404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRoleResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAssignSpamRole404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRoleResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersRemoveTrustedRole404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRoleResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersAddTrustedRole404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersGetInformation401Response:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersGetInformation401Response-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersGetInformation401Response-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndCommentsResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response:
      example:
        error: not found
        status: 404
      properties:
        error:
          example: not found
          type: string
        status:
          example: 404
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response-properties-error:
      example: not found
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUnpublishUserArticlesAndComments404Response-properties-status:
      example: 404
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUserResponse:
      example:
        error: unauthorized
        status: 401
      properties:
        error:
          example: unauthorized
          type: string
        status:
          example: 401
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUserResponse-properties-error:
      example: unauthorized
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUserResponse-properties-status:
      example: 401
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUser422Response:
      example:
        error: "param is missing or the value is empty: email"
        status: 422
      properties:
        error:
          example: "param is missing or the value is empty: email"
          type: string
        status:
          example: 422
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUser422Response-properties-error:
      example: "param is missing or the value is empty: email"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersInviteUser422Response-properties-status:
      example: 422
      type: number
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--api-articles:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        tag:
          type: string
        tags:
          type: string
        tags_exclude:
          type: string
        username:
          type: string
        state:
          enum:
          - fresh
          - rising
          - all
          type: string
        top:
          format: int32
          minimum: 1
          type: integer
        collection_id:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - tag
      - tags
      - tags_exclude
      - username
      - state
      - top
      - collection_id
    konfig-generated-schema-single-parameter-schema-post--api-articles:
      properties:
        article:
          properties:
            tags:
              type: string
            title:
              type: string
            description:
              type: string
            body_markdown:
              type: string
            published:
              default: false
              example: false
              type: boolean
              x-konfig-original-example: false
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-Article-properties-article-properties-published
            series:
              nullable: true
              type: string
            main_image:
              nullable: true
              type: string
            canonical_url:
              nullable: true
              type: string
            organization_id:
              nullable: true
              type: integer
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-articles-latest:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-articles-id:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-articles-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        article:
          properties:
            tags:
              type: string
            title:
              type: string
            description:
              type: string
            body_markdown:
              type: string
            published:
              default: false
              example: false
              type: boolean
              x-konfig-original-example: false
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-Article-properties-article-properties-published
            series:
              nullable: true
              type: string
            main_image:
              nullable: true
              type: string
            canonical_url:
              nullable: true
              type: string
            organization_id:
              nullable: true
              type: integer
          type: object
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-articles-username-slug:
      properties:
        username:
          type: string
        slug:
          type: string
      required:
      - slug
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
      - slug
    konfig-generated-schema-single-parameter-schema-get--api-articles-me:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-articles-me-published:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-articles-me-unpublished:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-articles-me-all:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-put--api-articles-id-unpublish:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        note:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - note
    konfig-generated-schema-single-parameter-schema-get--api-segments:
      properties:
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - per_page
    konfig-generated-schema-single-parameter-schema-post--api-segments:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-segments-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-segments-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-segments-id-users:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - per_page
    konfig-generated-schema-single-parameter-schema-put--api-segments-id-add_users:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        user_ids:
          items:
            type: integer
          maxItems: 10000
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-segments-id-remove_users:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        user_ids:
          items:
            type: integer
          maxItems: 10000
          type: array
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-billboards:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-billboards:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-billboards-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-billboards-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-billboards-id-unpublish:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-comments:
      properties:
        page:
          type: string
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        a_id:
          type: string
        p_id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - a_id
      - p_id
      - page
    konfig-generated-schema-single-parameter-schema-get--api-comments-id:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-follows-tags:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-followers-users:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - sort
    konfig-generated-schema-single-parameter-schema-get--api-organizations-username:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-get--api-organizations-organization_id_or_username-users:
      properties:
        organization_id_or_username:
          type: string
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      required:
      - organization_id_or_username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - organization_id_or_username
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-organizations-organization_id_or_username-articles:
      properties:
        organization_id_or_username:
          type: string
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      required:
      - organization_id_or_username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - organization_id_or_username
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-organizations:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 10
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam10to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-post--api-organizations:
      properties:
        summary:
          type: string
        type_of:
          type: string
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        url:
          type: string
        location:
          type: string
        joined_at:
          type: string
        tech_stack:
          type: string
        tag_line:
          nullable: true
          type: string
        story:
          nullable: true
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-organizations-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-organizations-id:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-organizations-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        summary:
          type: string
        type_of:
          type: string
        username:
          type: string
        name:
          type: string
        twitter_username:
          type: string
        github_username:
          type: string
        url:
          type: string
        location:
          type: string
        joined_at:
          type: string
        tech_stack:
          type: string
        tag_line:
          nullable: true
          type: string
        story:
          nullable: true
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-pages:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-pages:
      properties:
        title:
          description: Title of the page
          type: string
        description:
          description: "For internal use, helps similar pages from one another"
          type: string
        slug:
          description: "Used to link to this page in URLs, must be unique and URL-safe"
          type: string
        body_markdown:
          description: The text (in markdown) of the ad (required)
          type: string
        body_json:
          description: "For JSON pages, the JSON body"
          type: string
        is_top_level_path:
          description: "If true, the page is available at '/{slug}' instead of '/page/{slug}',\
            \ use with caution"
          type: boolean
        template:
          default: contained
          description: Controls what kind of layout the page is rendered in
          enum:
          - contained
          - full_within_layout
          - nav_bar_included
          - json
          example: contained
          type: string
          x-konfig-original-example: contained
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageRequest-properties-template
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-pages-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-pages-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-pages-id:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
        title:
          description: Title of the page
          type: string
        description:
          description: "For internal use, helps similar pages from one another"
          type: string
        slug:
          description: "Used to link to this page in URLs, must be unique and URL-safe"
          type: string
        body_markdown:
          description: The text (in markdown) of the ad (required)
          nullable: true
          type: string
        body_json:
          description: "For JSON pages, the JSON body"
          nullable: true
          type: string
        is_top_level_path:
          description: "If true, the page is available at '/{slug}' instead of '/page/{slug}',\
            \ use with caution"
          type: boolean
        social_image:
          nullable: true
          type: object
        template:
          default: contained
          description: Controls what kind of layout the page is rendered in
          enum:
          - contained
          - full_within_layout
          - nav_bar_included
          - json
          example: contained
          type: string
          x-konfig-original-example: contained
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Page-properties-template
      required:
      - description
      - id
      - slug
      - template
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-podcast_episodes:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
        username:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
      - username
    konfig-generated-schema-single-parameter-schema-get--api-profile_images-username:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-post--api-reactions-toggle:
      properties:
        category:
          enum:
          - like
          - unicorn
          - exploding_head
          - raised_hands
          - fire
          type: string
        reactable_id:
          format: int32
          type: integer
        reactable_type:
          enum:
          - Comment
          - Article
          - User
          type: string
      required:
      - category
      - reactable_id
      - reactable_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - category
      - reactable_id
      - reactable_type
    konfig-generated-schema-single-parameter-schema-post--api-reactions:
      properties:
        category:
          enum:
          - like
          - unicorn
          - exploding_head
          - raised_hands
          - fire
          type: string
        reactable_id:
          format: int32
          type: integer
        reactable_type:
          enum:
          - Comment
          - Article
          - User
          type: string
      required:
      - category
      - reactable_id
      - reactable_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - category
      - reactable_id
      - reactable_type
    konfig-generated-schema-single-parameter-schema-get--api-readinglist:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 30
          example: 30
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam30to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-get--api-tags:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 10
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam10to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    konfig-generated-schema-single-parameter-schema-put--api-users-id-suspend:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--api-users-id-limited:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-users-id-limited:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--api-users-id-spam:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-users-id-spam:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--api-users-id-trusted:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-users-id-trusted:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--api-users-me:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-users-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--api-users-id-unpublish:
      properties:
        id:
          format: int32
          minimum: 1
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--api-admin-users:
      properties:
        email:
          type: string
        name:
          nullable: true
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-videos:
      properties:
        page:
          default: 1
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-pageParam-schema
        per_page:
          default: 24
          example: 24
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
          x-konfig-original-example: 24
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-perPageParam24to1000-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - per_page
    VideoArticle_user:
      description: Author of the article
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Article_article:
      example:
        body_markdown: body_markdown
        series: series
        main_image: main_image
        organization_id: 0
        description: description
        published: false
        title: title
        canonical_url: canonical_url
        tags: tags
      properties:
        tags:
          type: string
        title:
          type: string
        description:
          type: string
        body_markdown:
          type: string
        published:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Article-properties-article-properties-published
        series:
          nullable: true
          type: string
        main_image:
          nullable: true
          type: string
        canonical_url:
          nullable: true
          type: string
        organization_id:
          nullable: true
          type: integer
      type: object
    ArticlesCreateNewArticleResponse_user:
      properties:
        name:
          example: Carmen "Andre" \:/ Rodriguez
          type: string
          x-konfig-original-example: Carmen "Andre" \:/ Rodriguez
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-name
        username:
          example: username2
          type: string
          x-konfig-original-example: username2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-username
        twitter_username:
          example: twitter2
          type: string
          x-konfig-original-example: twitter2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-twitter_username
        github_username:
          example: github2
          type: string
          x-konfig-original-example: github2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-github_username
        user_id:
          example: 882
          type: number
          x-konfig-original-example: 882
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-user_id
        website_url:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-website_url
          example: null
        profile_image:
          example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-profile_image
        profile_image_90:
          example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/882/a6c7c9f0-6c40-491e-a306-a03c926c6aac.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesCreateNewArticleResponse-properties-user-properties-profile_image_90
      type: object
    ArticlesUpdateByIdResponse_user:
      properties:
        name:
          example: Danilo "Morton" \:/ Douglas
          type: string
          x-konfig-original-example: Danilo "Morton" \:/ Douglas
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-name
        username:
          example: username11
          type: string
          x-konfig-original-example: username11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-username
        twitter_username:
          example: twitter11
          type: string
          x-konfig-original-example: twitter11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-twitter_username
        github_username:
          example: github11
          type: string
          x-konfig-original-example: github11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-github_username
        user_id:
          example: 891
          type: number
          x-konfig-original-example: 891
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-user_id
        website_url:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-website_url
          example: null
        profile_image:
          example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-profile_image
        profile_image_90:
          example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/891/e23f88f8-724f-4e6d-b6e1-1b3a9f04f39b.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ArticlesUpdateByIdResponse-properties-user-properties-profile_image_90
      type: object
    CommentsGetThreadedCommentResponse_user:
      properties:
        name:
          example: Kennith "Rodney" \:/ Baumbach
          type: string
          x-konfig-original-example: Kennith "Rodney" \:/ Baumbach
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-name
        username:
          example: username125
          type: string
          x-konfig-original-example: username125
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-username
        twitter_username:
          example: twitter125
          type: string
          x-konfig-original-example: twitter125
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-twitter_username
        github_username:
          example: github125
          type: string
          x-konfig-original-example: github125
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-github_username
        user_id:
          example: 1005
          type: number
          x-konfig-original-example: 1005
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-user_id
        website_url:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-website_url
          example: null
        profile_image:
          example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-profile_image
        profile_image_90:
          example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          type: string
          x-konfig-original-example: /uploads/user/profile_image/1005/a2641bae-3a16-4238-952a-04f14ce74d1a.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CommentsGetThreadedCommentResponse-properties-user-properties-profile_image_90
      type: object
    FollowersGetListResponse_inner:
      description: A follower
      example:
        path: path
        profile_image: profile_image
        user_id: 6
        name: name
        type_of: type_of
        id: 0
      properties:
        type_of:
          description: user_follower by default
          type: string
        id:
          format: int32
          type: integer
        user_id:
          description: The follower's user id
          format: int32
          type: integer
        name:
          description: The follower's name
          type: string
        path:
          description: A path to the follower's profile
          type: string
        profile_image:
          description: Profile image (640x640)
          type: string
      type: object
    PagesCreateNewPageResponse_social_image:
      properties:
        url:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PagesCreateNewPageResponse-properties-social_image-properties-url
          example: null
      type: object
  securitySchemes:
    api-key:
      description: |-
        API Key authentication.

        Authentication for some endpoints, like write operations on the
        Articles API require a DEV API key.

        All authenticated endpoints are CORS disabled, the API key is intended for non-browser scripts.

        ### Getting an API key

        To obtain one, please follow these steps:

          - visit https://dev.to/settings/extensions
          - in the "DEV API Keys" section create a new key by adding a
            description and clicking on "Generate API Key"

            ![obtain a DEV API Key](https://user-images.githubusercontent.com/37842/172718105-bd93664e-76e0-477d-99c4-265dda0b06c5.png)

          - You'll see the newly generated key in the same view
            ![generated DEV API Key](https://user-images.githubusercontent.com/37842/172718151-e7fe26a0-9937-42e8-96c6-333acdab9e49.png)
      in: header
      name: api-key
      type: apiKey
      x-konfig-globally-required-security: true

