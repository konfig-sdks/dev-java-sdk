/*
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Segment;
import com.konfigthis.client.model.SegmentUserIds;
import com.konfigthis.client.model.SegmentsAddUsersToSegmentResponse;
import com.konfigthis.client.model.SegmentsCreateManuallyManagedSegmentResponse;
import com.konfigthis.client.model.SegmentsDeleteManuallyManagedSegmentResponse;
import com.konfigthis.client.model.SegmentsRemoveUsersFromSegmentResponse;
import com.konfigthis.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SegmentsApi
 */
@Disabled
public class SegmentsApiTest {

    private static SegmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SegmentsApi(apiClient);
    }

    /**
     * Add users to a manually managed audience segment
     *
     * This endpoint allows the client to add users in bulk to an audience segment specified by ID.  Successes are users that were included in the segment (even if they were already in it), and failures are users that could not be added to the segment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUsersToSegmentTest() throws ApiException {
        Integer id = null;
        List<Integer> userIds = null;
        SegmentsAddUsersToSegmentResponse response = api.addUsersToSegment(id)
                .userIds(userIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a manually managed audience segment
     *
     * This endpoint allows the client to create a new audience segment.  An audience segment is a group of users that can be targeted by a Billboard. This API only permits managing segments you create and maintain yourself.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createManuallyManagedSegmentTest() throws ApiException {
        SegmentsCreateManuallyManagedSegmentResponse response = api.createManuallyManagedSegment()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a manually managed audience segment
     *
     * This endpoint allows the client to delete an audience segment specified by ID.  Audience segments cannot be deleted if there are still any Billboards using them.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteManuallyManagedSegmentTest() throws ApiException {
        Integer id = null;
        SegmentsDeleteManuallyManagedSegmentResponse response = api.deleteManuallyManagedSegment(id)
                .execute();
        // TODO: test validations
    }

    /**
     * A manually managed audience segment
     *
     * This endpoint allows the client to retrieve a single manually-managed audience segment specified by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        Integer id = null;
        List<Segment> response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Users in a manually managed audience segment
     *
     * This endpoint allows the client to retrieve a list of the users in an audience segment specified by ID. The endpoint supports pagination, and each page will contain &#x60;30&#x60; users by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserListInSegmentTest() throws ApiException {
        Integer id = null;
        Integer perPage = null;
        List<User> response = api.getUserListInSegment(id)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Manually managed audience segments
     *
     * This endpoint allows the client to retrieve a list of audience segments.  An audience segment is a group of users that can be targeted by a Billboard. This API only permits managing segments you create and maintain yourself.  The endpoint supports pagination, and each page will contain &#x60;30&#x60; segments by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAudienceSegmentsTest() throws ApiException {
        Integer perPage = null;
        List<Segment> response = api.listAudienceSegments()
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove users from a manually managed audience segment
     *
     * This endpoint allows the client to remove users in bulk from an audience segment specified by ID.  Successes are users that were removed; failures are users that weren&#39;t a part of the segment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUsersFromSegmentTest() throws ApiException {
        Integer id = null;
        List<Integer> userIds = null;
        SegmentsRemoveUsersFromSegmentResponse response = api.removeUsersFromSegment(id)
                .userIds(userIds)
                .execute();
        // TODO: test validations
    }

}
