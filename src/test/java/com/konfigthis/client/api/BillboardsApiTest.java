/*
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Billboard;
import com.konfigthis.client.model.BillboardsGetByIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillboardsApi
 */
@Disabled
public class BillboardsApiTest {

    private static BillboardsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BillboardsApi(apiClient);
    }

    /**
     * Create a billboard
     *
     * This endpoint allows the client to create a new billboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewBillboardTest() throws ApiException {
        List<Billboard> response = api.createNewBillboard()
                .execute();
        // TODO: test validations
    }

    /**
     * A billboard (by id)
     *
     * This endpoint allows the client to retrieve a single billboard, via its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        Integer id = null;
        BillboardsGetByIdResponse response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Billboards
     *
     * This endpoint allows the client to retrieve a list of all billboards.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        List<Billboard> response = api.getList()
                .execute();
        // TODO: test validations
    }

    /**
     * Unpublish a billboard
     *
     * This endpoint allows the client to remove a billboard from rotation by un-publishing it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unpublishBillboardTest() throws ApiException {
        Integer id = null;
        api.unpublishBillboard(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a billboard by ID
     *
     * This endpoint allows the client to update the attributes of a single billboard, via its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        Integer id = null;
        List<Billboard> response = api.updateById(id)
                .execute();
        // TODO: test validations
    }

}
